/*
 *	server/zone/objects/intangible/IntangibleObject.h generated by engine3 IDL compiler 0.55
 */

#ifndef INTANGIBLEOBJECT_H_
#define INTANGIBLEOBJECT_H_

#include "engine/orb/DistributedObjectBroker.h"

class SceneObject;

#include "../SceneObject.h"

class IntangibleObject : public SceneObject {
public:
	IntangibleObject(unsigned long long objectid, int type = 800);

protected:
	IntangibleObject(DummyConstructorParameter* param);

	virtual ~IntangibleObject();

	friend class IntangibleObjectHelper;
};

class IntangibleObjectImplementation;

class IntangibleObjectAdapter : public SceneObjectAdapter {
public:
	IntangibleObjectAdapter(IntangibleObjectImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

};

class IntangibleObjectHelper : public DistributedObjectClassHelper, public Singleton<IntangibleObjectHelper> {
	static IntangibleObjectHelper* staticInitializer;

public:
	IntangibleObjectHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<IntangibleObjectHelper>;
};

#include "../SceneObjectImplementation.h"

class IntangibleObjectServant : public SceneObjectImplementation {
public:
	IntangibleObject* _this;

public:
	IntangibleObjectServant(unsigned long long objectid, int type);
	virtual ~IntangibleObjectServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*INTANGIBLEOBJECT_H_*/
