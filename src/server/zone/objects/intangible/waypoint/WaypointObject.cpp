/*
 *	server/zone/objects/intangible/waypoint/WaypointObject.cpp generated by engine3 IDL compiler 0.55
 */

#include "WaypointObject.h"

#include "WaypointObjectImplementation.h"

#include "../IntangibleObject.h"

/*
 *	WaypointObjectStub
 */

WaypointObject::WaypointObject() : IntangibleObject(DummyConstructorParameter::instance()) {
	_impl = new WaypointObjectImplementation();
	_impl->_setStub(this);
}

WaypointObject::WaypointObject(DummyConstructorParameter* param) : IntangibleObject(param) {
}

WaypointObject::~WaypointObject() {
}

/*
 *	WaypointObjectAdapter
 */

WaypointObjectAdapter::WaypointObjectAdapter(WaypointObjectImplementation* obj) : IntangibleObjectAdapter(obj) {
}

Packet* WaypointObjectAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	WaypointObjectHelper
 */

WaypointObjectHelper* WaypointObjectHelper::staticInitializer = WaypointObjectHelper::instance();

WaypointObjectHelper::WaypointObjectHelper() {
	className = "WaypointObject";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void WaypointObjectHelper::finalizeHelper() {
	WaypointObjectHelper::finalize();
}

DistributedObject* WaypointObjectHelper::instantiateObject() {
	return new WaypointObject(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* WaypointObjectHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new WaypointObjectAdapter((WaypointObjectImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

/*
 *	WaypointObjectServant
 */

WaypointObjectServant::WaypointObjectServant() : IntangibleObjectImplementation() {
	_classHelper = WaypointObjectHelper::instance();
}

WaypointObjectServant::~WaypointObjectServant() {
}

void WaypointObjectServant::_setStub(DistributedObjectStub* stub) {
	_this = (WaypointObject*) stub;
	IntangibleObjectServant::_setStub(stub);
}

DistributedObjectStub* WaypointObjectServant::_getStub() {
	return _this;
}

