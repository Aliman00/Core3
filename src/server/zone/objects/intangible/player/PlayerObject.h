/*
 *	server/zone/objects/intangible/player/PlayerObject.h generated by engine3 IDL compiler 0.55
 */

#ifndef PLAYEROBJECT_H_
#define PLAYEROBJECT_H_

#include "engine/orb/DistributedObjectBroker.h"

#include "engine/service/proto/BaseMessage.h"

#include "engine/service/proto/StandaloneBaseMessage.h"

class ZoneClientSession;

class IntangibleObject;

class CreatureObject;

#include "../IntangibleObject.h"

class PlayerObject : public IntangibleObject {
public:
	PlayerObject(unsigned long long objectid, CreatureObject* linkedcreature);

	void sendMessage(BaseMessage* msg);

	void sendMessage(StandaloneBaseMessage* msg);

	void setClient(ZoneClientSession* client);

	void setAccessLevel(unsigned char level);

	ZoneClientSession* getClient();

	unsigned char getAccessLevel();

	bool isOnline();

	bool isOffline();

	bool isLoading();

	bool isLinkDead();

	bool isLoggingIn();

	bool isLoggingOut();

	bool isPrivileged();

protected:
	PlayerObject(DummyConstructorParameter* param);

	virtual ~PlayerObject();

	friend class PlayerObjectHelper;
};

class PlayerObjectImplementation;

class PlayerObjectAdapter : public IntangibleObjectAdapter {
public:
	PlayerObjectAdapter(PlayerObjectImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void sendMessage(BaseMessage* msg);

	void sendMessage(StandaloneBaseMessage* msg);

	void setClient(ZoneClientSession* client);

	void setAccessLevel(unsigned char level);

	ZoneClientSession* getClient();

	unsigned char getAccessLevel();

	bool isOnline();

	bool isOffline();

	bool isLoading();

	bool isLinkDead();

	bool isLoggingIn();

	bool isLoggingOut();

	bool isPrivileged();

};

class PlayerObjectHelper : public DistributedObjectClassHelper, public Singleton<PlayerObjectHelper> {
	static PlayerObjectHelper* staticInitializer;

public:
	PlayerObjectHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<PlayerObjectHelper>;
};

#include "../IntangibleObjectImplementation.h"

class PlayerObjectServant : public IntangibleObjectImplementation {
public:
	PlayerObject* _this;

public:
	PlayerObjectServant(unsigned long long objectid, int type);
	virtual ~PlayerObjectServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*PLAYEROBJECT_H_*/
