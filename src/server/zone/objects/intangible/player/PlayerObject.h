/*
 *	server/zone/objects/intangible/player/PlayerObject.h generated by engine3 IDL compiler 0.55
 */

#ifndef PLAYEROBJECT_H_
#define PLAYEROBJECT_H_

#include "engine/orb/DistributedObjectBroker.h"

class SceneObject;

#include "../scene/SceneObject.h"

class PlayerObject : public SceneObject {
public:
	PlayerObject();

protected:
	PlayerObject(DummyConstructorParameter* param);

	virtual ~PlayerObject();

	friend class PlayerObjectHelper;
};

class PlayerObjectImplementation;

class PlayerObjectAdapter : public SceneObjectAdapter {
public:
	PlayerObjectAdapter(PlayerObjectImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

};

class PlayerObjectHelper : public DistributedObjectClassHelper, public Singleton<PlayerObjectHelper> {
	static PlayerObjectHelper* staticInitializer;

public:
	PlayerObjectHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<PlayerObjectHelper>;
};

#include "../scene/SceneObjectImplementation.h"

class PlayerObjectServant : public SceneObjectImplementation {
public:
	PlayerObject* _this;

public:
	PlayerObjectServant();
	virtual ~PlayerObjectServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*PLAYEROBJECT_H_*/
