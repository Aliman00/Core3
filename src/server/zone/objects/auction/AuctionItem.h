/*
 *	server/zone/objects/auction/AuctionItem.h generated by engine3 IDL compiler 0.55
 */

#ifndef AUCTIONITEM_H_
#define AUCTIONITEM_H_

#include "engine/orb/DistributedObjectBroker.h"

#include "engine/core/ManagedObject.h"

class AuctionItem : public ManagedObject {
protected:
	AuctionItem();
	AuctionItem(DistributedObjectServant* obj);
	AuctionItem(AuctionItem& ref);

	virtual ~AuctionItem();

public:
	AuctionItem* clone();

	unsigned long long getId();

	unsigned long long getOwnerId();

	void setOwnerId(unsigned long long ownerid);

	void setOwnerName(string& name);

	unsigned long long getBuyerId();

	void setBuyerId(unsigned long long buyerid);

	string& getBidderName();

	void setBidderName(string& name);

	unsigned int getItemType();

	bool isSold();

	void setSold(bool sld);

	string& getTerminalTitle();

	string& getOwnerName();

	void setLocationPointer(int locpt);

	int getLocationPointer();

	void setOwnerPointer(int ownpt);

	int getOwnerPointer();

	string& getItemName();

	void setItemDescription(string& description);

	string& getItemDescription();

	int getPrice();

	void setPrice(int prc);

	unsigned int getExpireTime();

	void setExpireTime(unsigned int expiretime);

	bool getAuction();

	int getPlanet();

	string& getLocation();

protected:
	string _return_getBidderName;

	string _return_getItemDescription;

	string _return_getItemName;

	string _return_getLocation;

	string _return_getOwnerName;

	string _return_getTerminalTitle;


	friend class AuctionItemHelper;
};

class AuctionItemImplementation;

class AuctionItemAdapter : public ManagedObjectAdapter {
public:
	AuctionItemAdapter(AuctionItemImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	unsigned long long getId();

	unsigned long long getOwnerId();

	void setOwnerId(unsigned long long ownerid);

	void setOwnerName(string& name);

	unsigned long long getBuyerId();

	void setBuyerId(unsigned long long buyerid);

	string& getBidderName();

	void setBidderName(string& name);

	unsigned int getItemType();

	bool isSold();

	void setSold(bool sld);

	string& getTerminalTitle();

	string& getOwnerName();

	void setLocationPointer(int locpt);

	int getLocationPointer();

	void setOwnerPointer(int ownpt);

	int getOwnerPointer();

	string& getItemName();

	void setItemDescription(string& description);

	string& getItemDescription();

	int getPrice();

	void setPrice(int prc);

	unsigned int getExpireTime();

	void setExpireTime(unsigned int expiretime);

	bool getAuction();

	int getPlanet();

	string& getLocation();

protected:
	string _param0_setOwnerName__string_;
	string _param0_setBidderName__string_;
	string _param0_setItemDescription__string_;
};

class AuctionItemHelper : public DistributedObjectClassHelper, public Singleton<AuctionItemHelper> {
public:
	AuctionItemHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectServant* obj);

	friend class SingletonWrapper<AuctionItemHelper>;
};

#include "engine/core/ManagedObjectImplementation.h"

class AuctionItemServant : public ManagedObjectImplementation {
public:
	AuctionItem* _this;

public:
	AuctionItemServant();
	virtual ~AuctionItemServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*AUCTIONITEM_H_*/
