/*
 *	server/zone/objects/creature/bluefrog/BFVector.h generated by engine3 IDL compiler 0.55
 */

#ifndef BFVECTOR_H_
#define BFVECTOR_H_

#include "engine/orb/DistributedObjectBroker.h"

class BFVector : public DistributedObjectStub {
public:
	BFVector();

	unsigned int size();

	void add(string& item);

	string& get(unsigned int index);

protected:
	BFVector(DummyConstructorParameter* param);

	virtual ~BFVector();

	string _return_get;

	friend class BFVectorHelper;
};

class BFVectorImplementation;

class BFVectorAdapter : public DistributedObjectAdapter {
public:
	BFVectorAdapter(BFVectorImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	unsigned int size();

	void add(string& item);

	string& get(unsigned int index);

protected:
	string _param0_add__string_;
};

class BFVectorHelper : public DistributedObjectClassHelper, public Singleton<BFVectorHelper> {
	static BFVectorHelper* staticInitializer;

public:
	BFVectorHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<BFVectorHelper>;
};

class BFVectorServant : public DistributedObjectServant {
public:
	BFVector* _this;

public:
	BFVectorServant();
	virtual ~BFVectorServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*BFVECTOR_H_*/
