/*
 *	server/zone/objects/manufacture/ManufactureSchematic.cpp generated by engine3 IDL compiler 0.55
 */

#include "../scene/SceneObject.h"

#include "ManufactureSchematic.h"

#include "ManufactureSchematicImplementation.h"

/*
 *	ManufactureSchematicStub
 */

ManufactureSchematic::ManufactureSchematic() : SceneObject(NULL) {
}

ManufactureSchematic::ManufactureSchematic(DistributedObjectServant* obj) : SceneObject(obj) {
}

ManufactureSchematic::ManufactureSchematic(ManufactureSchematic& ref) : SceneObject(ref) {
}

ManufactureSchematic::~ManufactureSchematic() {
}

ManufactureSchematic* ManufactureSchematic::clone() {
	return new ManufactureSchematic(*this);
}


/*
 *	ManufactureSchematicAdapter
 */

ManufactureSchematicAdapter::ManufactureSchematicAdapter(ManufactureSchematicImplementation* obj) : SceneObjectAdapter(obj) {
}

Packet* ManufactureSchematicAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	ManufactureSchematicHelper
 */

ManufactureSchematicHelper* ManufactureSchematicHelper::staticInitializer = ManufactureSchematicHelper::instance();

ManufactureSchematicHelper::ManufactureSchematicHelper() {
	className = "ManufactureSchematic";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void ManufactureSchematicHelper::finalizeHelper() {
	ManufactureSchematicHelper::finalize();
}

DistributedObject* ManufactureSchematicHelper::instantiateObject() {
	return new ManufactureSchematic();
}

DistributedObjectAdapter* ManufactureSchematicHelper::createAdapter(DistributedObjectServant* obj) {
	DistributedObjectAdapter* adapter = new ManufactureSchematicAdapter((ManufactureSchematicImplementation*) obj);

	DistributedObjectStub* stub = new ManufactureSchematic(obj);
	stub->_setClassName(className);
	stub->_setClassHelper(this);

	adapter->setStub(stub);

	obj->_setStub(stub);

	return adapter;
}

/*
 *	ManufactureSchematicServant
 */

ManufactureSchematicServant::ManufactureSchematicServant(unsigned long long oid) : SceneObjectImplementation(oid) {
	_classHelper = ManufactureSchematicHelper::instance();
}

ManufactureSchematicServant::~ManufactureSchematicServant() {
}

void ManufactureSchematicServant::_setStub(DistributedObjectStub* stub) {
	_this = (ManufactureSchematic*) stub;
	SceneObjectServant::_setStub(stub);
}

DistributedObjectStub* ManufactureSchematicServant::_getStub() {
	return _this;
}

