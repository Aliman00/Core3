/*
 *	server/zone/objects/player/sui/colorpicker/SuiColorPicker.cpp generated by engine3 IDL compiler 0.55
 */

#include "../SuiBox.h"

#include "../../Player.h"

#include "SuiColorPicker.h"

#include "SuiColorPickerImplementation.h"

/*
 *	SuiColorPickerStub
 */

SuiColorPicker::SuiColorPicker() : SuiBox(NULL) {
}

SuiColorPicker::SuiColorPicker(DistributedObjectServant* obj) : SuiBox(obj) {
}

SuiColorPicker::SuiColorPicker(SuiColorPicker& ref) : SuiBox(ref) {
}

SuiColorPicker::~SuiColorPicker() {
}

SuiColorPicker* SuiColorPicker::clone() {
	return new SuiColorPicker(*this);
}


unsigned long long SuiColorPicker::getObjectID() {
	if (!deployed)
		throw ObjectNotDeployedException(this);

	if (_impl == NULL) {
		DistributedMethod method(this, 6);

		return method.executeWithUnsignedLongReturn();
	} else
		return ((SuiColorPickerImplementation*) _impl)->getObjectID();
}

BaseMessage* SuiColorPicker::generateMessage() {
	if (!deployed)
		throw ObjectNotDeployedException(this);

	if (_impl == NULL) {
		DistributedMethod method(this, 7);

		return (BaseMessage*) method.executeWithObjectReturn();
	} else
		return ((SuiColorPickerImplementation*) _impl)->generateMessage();
}

/*
 *	SuiColorPickerAdapter
 */

SuiColorPickerAdapter::SuiColorPickerAdapter(SuiColorPickerImplementation* obj) : SuiBoxAdapter(obj) {
}

Packet* SuiColorPickerAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	case 6:
		resp->insertLong(getObjectID());
		break;
	case 7:
		resp->insertLong(generateMessage()->_getObjectID());
		break;
	default:
		return NULL;
	}

	return resp;
}

unsigned long long SuiColorPickerAdapter::getObjectID() {
	return ((SuiColorPickerImplementation*) impl)->getObjectID();
}

BaseMessage* SuiColorPickerAdapter::generateMessage() {
	return ((SuiColorPickerImplementation*) impl)->generateMessage();
}

/*
 *	SuiColorPickerHelper
 */

SuiColorPickerHelper::SuiColorPickerHelper() {
	className = "SuiColorPicker";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void SuiColorPickerHelper::finalizeHelper() {
	SuiColorPickerHelper::finalize();
}

DistributedObject* SuiColorPickerHelper::instantiateObject() {
	return new SuiColorPicker();
}

DistributedObjectAdapter* SuiColorPickerHelper::createAdapter(DistributedObjectServant* obj) {
	DistributedObjectAdapter* adapter = new SuiColorPickerAdapter((SuiColorPickerImplementation*) obj);

	DistributedObjectStub* stub = new SuiColorPicker(obj);
	stub->_setClassName(className);
	stub->_setClassHelper(this);

	adapter->setStub(stub);

	obj->_setStub(stub);

	return adapter;
}

/*
 *	SuiColorPickerServant
 */

SuiColorPickerServant::SuiColorPickerServant(Player* play, unsigned int typeID, unsigned int boxtype) : SuiBoxImplementation(play, typeID, boxtype) {
	_classHelper = SuiColorPickerHelper::instance();
}

SuiColorPickerServant::~SuiColorPickerServant() {
}

void SuiColorPickerServant::_setStub(DistributedObjectStub* stub) {
	_this = (SuiColorPicker*) stub;
	SuiBoxServant::_setStub(stub);
}

DistributedObjectStub* SuiColorPickerServant::_getStub() {
	return _this;
}

