/*
 *	server/zone/objects/player/sui/SuiBox.cpp generated by engine3 IDL compiler 0.55
 */

#include "../Player.h"

#include "SuiBox.h"

#include "SuiBoxImplementation.h"

/*
 *	SuiBoxStub
 */

SuiBox::SuiBox() : DistributedObjectStub(NULL) {
}

SuiBox::SuiBox(DistributedObjectServant* obj) : DistributedObjectStub(obj) {
}

SuiBox::SuiBox(SuiBox& ref) : DistributedObjectStub(ref) {
}

SuiBox::~SuiBox() {
}

SuiBox* SuiBox::clone() {
	return new SuiBox(*this);
}


void SuiBox::setPromptTitle(const string& name) {
	if (!deployed)
		throw ObjectNotDeployedException(this);

	if (_impl == NULL) {
		DistributedMethod method(this, 6);
		method.addAsciiParameter(name);

		method.executeWithVoidReturn();
	} else
		((SuiBoxImplementation*) _impl)->setPromptTitle(name);
}

void SuiBox::setPromptText(const string& name) {
	if (!deployed)
		throw ObjectNotDeployedException(this);

	if (_impl == NULL) {
		DistributedMethod method(this, 7);
		method.addAsciiParameter(name);

		method.executeWithVoidReturn();
	} else
		((SuiBoxImplementation*) _impl)->setPromptText(name);
}

void SuiBox::setCancelButton(bool value) {
	if (!deployed)
		throw ObjectNotDeployedException(this);

	if (_impl == NULL) {
		DistributedMethod method(this, 8);
		method.addBooleanParameter(value);

		method.executeWithVoidReturn();
	} else
		((SuiBoxImplementation*) _impl)->setCancelButton(value);
}

void SuiBox::setUsingObjectID(unsigned long long oid) {
	if (!deployed)
		throw ObjectNotDeployedException(this);

	if (_impl == NULL) {
		DistributedMethod method(this, 9);
		method.addUnsignedLongParameter(oid);

		method.executeWithVoidReturn();
	} else
		((SuiBoxImplementation*) _impl)->setUsingObjectID(oid);
}

bool SuiBox::isInputBox() {
	if (!deployed)
		throw ObjectNotDeployedException(this);

	if (_impl == NULL) {
		DistributedMethod method(this, 10);

		return method.executeWithBooleanReturn();
	} else
		return ((SuiBoxImplementation*) _impl)->isInputBox();
}

bool SuiBox::isListBox() {
	if (!deployed)
		throw ObjectNotDeployedException(this);

	if (_impl == NULL) {
		DistributedMethod method(this, 11);

		return method.executeWithBooleanReturn();
	} else
		return ((SuiBoxImplementation*) _impl)->isListBox();
}

bool SuiBox::isMessageBox() {
	if (!deployed)
		throw ObjectNotDeployedException(this);

	if (_impl == NULL) {
		DistributedMethod method(this, 12);

		return method.executeWithBooleanReturn();
	} else
		return ((SuiBoxImplementation*) _impl)->isMessageBox();
}

bool SuiBox::isTransferBox() {
	if (!deployed)
		throw ObjectNotDeployedException(this);

	if (_impl == NULL) {
		DistributedMethod method(this, 13);

		return method.executeWithBooleanReturn();
	} else
		return ((SuiBoxImplementation*) _impl)->isTransferBox();
}

bool SuiBox::isColorPicker() {
	if (!deployed)
		throw ObjectNotDeployedException(this);

	if (_impl == NULL) {
		DistributedMethod method(this, 14);

		return method.executeWithBooleanReturn();
	} else
		return ((SuiBoxImplementation*) _impl)->isColorPicker();
}

bool SuiBox::isBankTransferBox() {
	if (!deployed)
		throw ObjectNotDeployedException(this);

	if (_impl == NULL) {
		DistributedMethod method(this, 15);

		return method.executeWithBooleanReturn();
	} else
		return ((SuiBoxImplementation*) _impl)->isBankTransferBox();
}

unsigned long long SuiBox::getBoxID() {
	if (!deployed)
		throw ObjectNotDeployedException(this);

	if (_impl == NULL) {
		DistributedMethod method(this, 16);

		return method.executeWithUnsignedLongReturn();
	} else
		return ((SuiBoxImplementation*) _impl)->getBoxID();
}

unsigned long long SuiBox::getUsingObjectID() {
	if (!deployed)
		throw ObjectNotDeployedException(this);

	if (_impl == NULL) {
		DistributedMethod method(this, 17);

		return method.executeWithUnsignedLongReturn();
	} else
		return ((SuiBoxImplementation*) _impl)->getUsingObjectID();
}

Player* SuiBox::getPlayer() {
	if (!deployed)
		throw ObjectNotDeployedException(this);

	if (_impl == NULL) {
		DistributedMethod method(this, 18);

		return (Player*) method.executeWithObjectReturn();
	} else
		return ((SuiBoxImplementation*) _impl)->getPlayer();
}

/*
 *	SuiBoxAdapter
 */

SuiBoxAdapter::SuiBoxAdapter(SuiBoxImplementation* obj) : DistributedObjectAdapter((DistributedObjectServant*) obj) {
}

Packet* SuiBoxAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	case 6:
		setPromptTitle(inv->getAsciiParameter(_param0_setPromptTitle__string_));
		break;
	case 7:
		setPromptText(inv->getAsciiParameter(_param0_setPromptText__string_));
		break;
	case 8:
		setCancelButton(inv->getBooleanParameter());
		break;
	case 9:
		setUsingObjectID(inv->getUnsignedLongParameter());
		break;
	case 10:
		resp->insertBoolean(isInputBox());
		break;
	case 11:
		resp->insertBoolean(isListBox());
		break;
	case 12:
		resp->insertBoolean(isMessageBox());
		break;
	case 13:
		resp->insertBoolean(isTransferBox());
		break;
	case 14:
		resp->insertBoolean(isColorPicker());
		break;
	case 15:
		resp->insertBoolean(isBankTransferBox());
		break;
	case 16:
		resp->insertLong(getBoxID());
		break;
	case 17:
		resp->insertLong(getUsingObjectID());
		break;
	case 18:
		resp->insertLong(getPlayer()->_getObjectID());
		break;
	default:
		return NULL;
	}

	return resp;
}

void SuiBoxAdapter::setPromptTitle(const string& name) {
	return ((SuiBoxImplementation*) impl)->setPromptTitle(name);
}

void SuiBoxAdapter::setPromptText(const string& name) {
	return ((SuiBoxImplementation*) impl)->setPromptText(name);
}

void SuiBoxAdapter::setCancelButton(bool value) {
	return ((SuiBoxImplementation*) impl)->setCancelButton(value);
}

void SuiBoxAdapter::setUsingObjectID(unsigned long long oid) {
	return ((SuiBoxImplementation*) impl)->setUsingObjectID(oid);
}

bool SuiBoxAdapter::isInputBox() {
	return ((SuiBoxImplementation*) impl)->isInputBox();
}

bool SuiBoxAdapter::isListBox() {
	return ((SuiBoxImplementation*) impl)->isListBox();
}

bool SuiBoxAdapter::isMessageBox() {
	return ((SuiBoxImplementation*) impl)->isMessageBox();
}

bool SuiBoxAdapter::isTransferBox() {
	return ((SuiBoxImplementation*) impl)->isTransferBox();
}

bool SuiBoxAdapter::isColorPicker() {
	return ((SuiBoxImplementation*) impl)->isColorPicker();
}

bool SuiBoxAdapter::isBankTransferBox() {
	return ((SuiBoxImplementation*) impl)->isBankTransferBox();
}

unsigned long long SuiBoxAdapter::getBoxID() {
	return ((SuiBoxImplementation*) impl)->getBoxID();
}

unsigned long long SuiBoxAdapter::getUsingObjectID() {
	return ((SuiBoxImplementation*) impl)->getUsingObjectID();
}

Player* SuiBoxAdapter::getPlayer() {
	return ((SuiBoxImplementation*) impl)->getPlayer();
}

/*
 *	SuiBoxHelper
 */

SuiBoxHelper::SuiBoxHelper() {
	className = "SuiBox";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void SuiBoxHelper::finalizeHelper() {
	SuiBoxHelper::finalize();
}

DistributedObject* SuiBoxHelper::instantiateObject() {
	return new SuiBox();
}

DistributedObjectAdapter* SuiBoxHelper::createAdapter(DistributedObjectServant* obj) {
	DistributedObjectAdapter* adapter = new SuiBoxAdapter((SuiBoxImplementation*) obj);

	DistributedObjectStub* stub = new SuiBox(obj);
	stub->_setClassName(className);
	stub->_setClassHelper(this);

	adapter->setStub(stub);

	obj->_setStub(stub);

	return adapter;
}

/*
 *	SuiBoxServant
 */

SuiBoxServant::SuiBoxServant() {
	_classHelper = SuiBoxHelper::instance();
}

SuiBoxServant::~SuiBoxServant() {
}

void SuiBoxServant::_setStub(DistributedObjectStub* stub) {
	_this = (SuiBox*) stub;
}

DistributedObjectStub* SuiBoxServant::_getStub() {
	return _this;
}

