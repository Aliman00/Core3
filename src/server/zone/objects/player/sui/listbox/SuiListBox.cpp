/*
 *	server/zone/objects/player/sui/listbox/SuiListBox.cpp generated by engine3 IDL compiler 0.55
 */

#include "../SuiBox.h"

#include "../../Player.h"

#include "SuiListBox.h"

#include "SuiListBoxImplementation.h"

/*
 *	SuiListBoxStub
 */

SuiListBox::SuiListBox() : SuiBox(NULL) {
}

SuiListBox::SuiListBox(DistributedObjectServant* obj) : SuiBox(obj) {
}

SuiListBox::SuiListBox(SuiListBox& ref) : SuiBox(ref) {
}

SuiListBox::~SuiListBox() {
}

SuiListBox* SuiListBox::clone() {
	return new SuiListBox(*this);
}


void SuiListBox::addMenuItem(const string& item, unsigned long long objectID) {
	if (!deployed)
		throw ObjectNotDeployedException(this);

	if (_impl == NULL) {
		DistributedMethod method(this, 6);
		method.addAsciiParameter(item);
		method.addUnsignedLongParameter(objectID);

		method.executeWithVoidReturn();
	} else
		((SuiListBoxImplementation*) _impl)->addMenuItem(item, objectID);
}

int SuiListBox::getMenuSize() {
	if (!deployed)
		throw ObjectNotDeployedException(this);

	if (_impl == NULL) {
		DistributedMethod method(this, 7);

		return method.executeWithSignedIntReturn();
	} else
		return ((SuiListBoxImplementation*) _impl)->getMenuSize();
}

unsigned long long SuiListBox::getMenuObjectID(int idx) {
	if (!deployed)
		throw ObjectNotDeployedException(this);

	if (_impl == NULL) {
		DistributedMethod method(this, 8);
		method.addSignedIntParameter(idx);

		return method.executeWithUnsignedLongReturn();
	} else
		return ((SuiListBoxImplementation*) _impl)->getMenuObjectID(idx);
}

BaseMessage* SuiListBox::generateMessage() {
	if (!deployed)
		throw ObjectNotDeployedException(this);

	if (_impl == NULL) {
		DistributedMethod method(this, 9);

		return (BaseMessage*) method.executeWithObjectReturn();
	} else
		return ((SuiListBoxImplementation*) _impl)->generateMessage();
}

/*
 *	SuiListBoxAdapter
 */

SuiListBoxAdapter::SuiListBoxAdapter(SuiListBoxImplementation* obj) : SuiBoxAdapter(obj) {
}

Packet* SuiListBoxAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	case 6:
		addMenuItem(inv->getAsciiParameter(_param0_addMenuItem__string_long_), inv->getUnsignedLongParameter());
		break;
	case 7:
		resp->insertSignedInt(getMenuSize());
		break;
	case 8:
		resp->insertLong(getMenuObjectID(inv->getSignedIntParameter()));
		break;
	case 9:
		resp->insertLong(generateMessage()->_getObjectID());
		break;
	default:
		return NULL;
	}

	return resp;
}

void SuiListBoxAdapter::addMenuItem(const string& item, unsigned long long objectID) {
	return ((SuiListBoxImplementation*) impl)->addMenuItem(item, objectID);
}

int SuiListBoxAdapter::getMenuSize() {
	return ((SuiListBoxImplementation*) impl)->getMenuSize();
}

unsigned long long SuiListBoxAdapter::getMenuObjectID(int idx) {
	return ((SuiListBoxImplementation*) impl)->getMenuObjectID(idx);
}

BaseMessage* SuiListBoxAdapter::generateMessage() {
	return ((SuiListBoxImplementation*) impl)->generateMessage();
}

/*
 *	SuiListBoxHelper
 */

SuiListBoxHelper::SuiListBoxHelper() {
	className = "SuiListBox";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void SuiListBoxHelper::finalizeHelper() {
	SuiListBoxHelper::finalize();
}

DistributedObject* SuiListBoxHelper::instantiateObject() {
	return new SuiListBox();
}

DistributedObjectAdapter* SuiListBoxHelper::createAdapter(DistributedObjectServant* obj) {
	DistributedObjectAdapter* adapter = new SuiListBoxAdapter((SuiListBoxImplementation*) obj);

	DistributedObjectStub* stub = new SuiListBox(obj);
	stub->_setClassName(className);
	stub->_setClassHelper(this);

	adapter->setStub(stub);

	obj->_setStub(stub);

	return adapter;
}

/*
 *	SuiListBoxServant
 */

SuiListBoxServant::SuiListBoxServant(Player* play, unsigned int typeID, unsigned int boxtype) : SuiBoxImplementation(play, typeID, boxtype) {
	_classHelper = SuiListBoxHelper::instance();
}

SuiListBoxServant::~SuiListBoxServant() {
}

void SuiListBoxServant::_setStub(DistributedObjectStub* stub) {
	_this = (SuiListBox*) stub;
	SuiBoxServant::_setStub(stub);
}

DistributedObjectStub* SuiListBoxServant::_getStub() {
	return _this;
}

