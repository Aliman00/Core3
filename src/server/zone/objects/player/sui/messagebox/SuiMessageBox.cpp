/*
 *	server/zone/objects/player/sui/messagebox/SuiMessageBox.cpp generated by engine3 IDL compiler 0.55
 */

#include "../SuiBox.h"

#include "../../Player.h"

#include "SuiMessageBox.h"

#include "SuiMessageBoxImplementation.h"

/*
 *	SuiMessageBoxStub
 */

SuiMessageBox::SuiMessageBox() : SuiBox(NULL) {
}

SuiMessageBox::SuiMessageBox(DistributedObjectServant* obj) : SuiBox(obj) {
}

SuiMessageBox::SuiMessageBox(SuiMessageBox& ref) : SuiBox(ref) {
}

SuiMessageBox::~SuiMessageBox() {
}

SuiMessageBox* SuiMessageBox::clone() {
	return new SuiMessageBox(*this);
}


BaseMessage* SuiMessageBox::generateMessage() {
	if (!deployed)
		throw ObjectNotDeployedException(this);

	if (_impl == NULL) {
		DistributedMethod method(this, 6);

		return (BaseMessage*) method.executeWithObjectReturn();
	} else
		return ((SuiMessageBoxImplementation*) _impl)->generateMessage();
}

/*
 *	SuiMessageBoxAdapter
 */

SuiMessageBoxAdapter::SuiMessageBoxAdapter(SuiMessageBoxImplementation* obj) : SuiBoxAdapter(obj) {
}

Packet* SuiMessageBoxAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	case 6:
		resp->insertLong(generateMessage()->_getObjectID());
		break;
	default:
		return NULL;
	}

	return resp;
}

BaseMessage* SuiMessageBoxAdapter::generateMessage() {
	return ((SuiMessageBoxImplementation*) impl)->generateMessage();
}

/*
 *	SuiMessageBoxHelper
 */

SuiMessageBoxHelper::SuiMessageBoxHelper() {
	className = "SuiMessageBox";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void SuiMessageBoxHelper::finalizeHelper() {
	SuiMessageBoxHelper::finalize();
}

DistributedObject* SuiMessageBoxHelper::instantiateObject() {
	return new SuiMessageBox();
}

DistributedObjectAdapter* SuiMessageBoxHelper::createAdapter(DistributedObjectServant* obj) {
	DistributedObjectAdapter* adapter = new SuiMessageBoxAdapter((SuiMessageBoxImplementation*) obj);

	DistributedObjectStub* stub = new SuiMessageBox(obj);
	stub->_setClassName(className);
	stub->_setClassHelper(this);

	adapter->setStub(stub);

	obj->_setStub(stub);

	return adapter;
}

/*
 *	SuiMessageBoxServant
 */

SuiMessageBoxServant::SuiMessageBoxServant(Player* play, unsigned int typeID, unsigned int boxtype) : SuiBoxImplementation(play, typeID, boxtype) {
	_classHelper = SuiMessageBoxHelper::instance();
}

SuiMessageBoxServant::~SuiMessageBoxServant() {
}

void SuiMessageBoxServant::_setStub(DistributedObjectStub* stub) {
	_this = (SuiMessageBox*) stub;
	SuiBoxServant::_setStub(stub);
}

DistributedObjectStub* SuiMessageBoxServant::_getStub() {
	return _this;
}

