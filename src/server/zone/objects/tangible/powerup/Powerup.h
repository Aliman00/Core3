/*
 *	server/zone/objects/tangible/powerup/Powerup.h generated by engine3 IDL compiler 0.55
 */

#ifndef POWERUP_H_
#define POWERUP_H_

#include "engine/orb/DistributedObjectBroker.h"

class TangibleObject;

class CreatureObject;

class Player;

class Weapon;

#include "engine/service/Message.h"

#include "../TangibleObject.h"

class Powerup : public TangibleObject {
protected:
	Powerup();
	Powerup(DistributedObjectServant* obj);
	Powerup(Powerup& ref);

	virtual ~Powerup();

public:
	Powerup* clone();

	void apply(Weapon* weapon);

	void remove(Player* player);

	int getPowerup0Type();

	int getPowerup1Type();

	int getPowerup2Type();

	float getPowerup0Value();

	float getPowerup1Value();

	float getPowerup2Value();

	int getPowerupUses();

	int getPowerupType();

	int getPowerupSubType();

	void setPowerup0Type(int value);

	void setPowerup1Type(int value);

	void setPowerup2Type(int value);

	void setPowerup0Value(float value);

	void setPowerup1Value(float value);

	void setPowerup2Value(float value);

	void setPowerupUses(int value);

	void setPowerupType(int value);

	void setPowerupSubType(int value);

protected:
	friend class PowerupHelper;
};

class PowerupImplementation;

class PowerupAdapter : public TangibleObjectAdapter {
public:
	PowerupAdapter(PowerupImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void apply(Weapon* weapon);

	void remove(Player* player);

	int getPowerup0Type();

	int getPowerup1Type();

	int getPowerup2Type();

	float getPowerup0Value();

	float getPowerup1Value();

	float getPowerup2Value();

	int getPowerupUses();

	int getPowerupType();

	int getPowerupSubType();

	void setPowerup0Type(int value);

	void setPowerup1Type(int value);

	void setPowerup2Type(int value);

	void setPowerup0Value(float value);

	void setPowerup1Value(float value);

	void setPowerup2Value(float value);

	void setPowerupUses(int value);

	void setPowerupType(int value);

	void setPowerupSubType(int value);

};

class PowerupHelper : public DistributedObjectClassHelper, public Singleton<PowerupHelper> {
	static PowerupHelper* staticInitializer;

public:
	PowerupHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectServant* obj);

	friend class SingletonWrapper<PowerupHelper>;
};

#include "../TangibleObjectImplementation.h"

class PowerupServant : public TangibleObjectImplementation {
public:
	Powerup* _this;

public:
	PowerupServant(unsigned int oid, int type);
	virtual ~PowerupServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*POWERUP_H_*/
