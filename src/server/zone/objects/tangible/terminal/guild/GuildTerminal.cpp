/*
 *	server/zone/objects/tangible/terminal/guild/GuildTerminal.cpp generated by engine3 IDL compiler 0.55
 */

#include "../Terminal.h"

#include "../../../player/Player.h"

#include "GuildTerminal.h"

#include "GuildTerminalImplementation.h"

/*
 *	GuildTerminalStub
 */

GuildTerminal::GuildTerminal() : Terminal(NULL) {
}

GuildTerminal::GuildTerminal(DistributedObjectServant* obj) : Terminal(obj) {
}

GuildTerminal::GuildTerminal(GuildTerminal& ref) : Terminal(ref) {
}

GuildTerminal::~GuildTerminal() {
}

GuildTerminal* GuildTerminal::clone() {
	return new GuildTerminal(*this);
}


int GuildTerminal::useObject(Player* player) {
	if (!deployed)
		throw ObjectNotDeployedException(this);

	if (_impl == NULL) {
		DistributedMethod method(this, 6);
		method.addObjectParameter(player);

		return method.executeWithSignedIntReturn();
	} else
		return ((GuildTerminalImplementation*) _impl)->useObject(player);
}

/*
 *	GuildTerminalAdapter
 */

GuildTerminalAdapter::GuildTerminalAdapter(GuildTerminalImplementation* obj) : TerminalAdapter(obj) {
}

Packet* GuildTerminalAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	case 6:
		resp->insertSignedInt(useObject((Player*) inv->getObjectParameter()));
		break;
	default:
		return NULL;
	}

	return resp;
}

int GuildTerminalAdapter::useObject(Player* player) {
	return ((GuildTerminalImplementation*) impl)->useObject(player);
}

/*
 *	GuildTerminalHelper
 */

GuildTerminalHelper::GuildTerminalHelper() {
	className = "GuildTerminal";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void GuildTerminalHelper::finalizeHelper() {
	GuildTerminalHelper::finalize();
}

DistributedObject* GuildTerminalHelper::instantiateObject() {
	return new GuildTerminal();
}

DistributedObjectAdapter* GuildTerminalHelper::createAdapter(DistributedObjectServant* obj) {
	DistributedObjectAdapter* adapter = new GuildTerminalAdapter((GuildTerminalImplementation*) obj);

	DistributedObjectStub* stub = new GuildTerminal(obj);
	stub->_setClassName(className);
	stub->_setClassHelper(this);

	adapter->setStub(stub);

	obj->_setStub(stub);

	return adapter;
}

/*
 *	GuildTerminalServant
 */

GuildTerminalServant::GuildTerminalServant(unsigned int objCRC, unsigned long long objid, const unicode& n, const string& tempn, float x, float z, float y, int TerminalType) : TerminalImplementation(objCRC, objid, n, tempn, x, z, y, TerminalType) {
	_classHelper = GuildTerminalHelper::instance();
}

GuildTerminalServant::~GuildTerminalServant() {
}

void GuildTerminalServant::_setStub(DistributedObjectStub* stub) {
	_this = (GuildTerminal*) stub;
	TerminalServant::_setStub(stub);
}

DistributedObjectStub* GuildTerminalServant::_getStub() {
	return _this;
}

