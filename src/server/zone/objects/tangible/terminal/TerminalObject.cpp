/*
 *	server/zone/objects/tangible/terminal/TerminalObject.cpp generated by engine3 IDL compiler 0.55
 */

#include "TerminalObject.h"

#include "TerminalObjectImplementation.h"

#include "../TangibleObject.h"

/*
 *	TerminalObjectStub
 */

TerminalObject::TerminalObject() : TangibleObject(DummyConstructorParameter::instance()) {
	_impl = new TerminalObjectImplementation();
	_impl->_setStub(this);
}

TerminalObject::TerminalObject(DummyConstructorParameter* param) : TangibleObject(param) {
}

TerminalObject::~TerminalObject() {
}

/*
 *	TerminalObjectAdapter
 */

TerminalObjectAdapter::TerminalObjectAdapter(TerminalObjectImplementation* obj) : TangibleObjectAdapter(obj) {
}

Packet* TerminalObjectAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	TerminalObjectHelper
 */

TerminalObjectHelper* TerminalObjectHelper::staticInitializer = TerminalObjectHelper::instance();

TerminalObjectHelper::TerminalObjectHelper() {
	className = "TerminalObject";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void TerminalObjectHelper::finalizeHelper() {
	TerminalObjectHelper::finalize();
}

DistributedObject* TerminalObjectHelper::instantiateObject() {
	return new TerminalObject(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* TerminalObjectHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new TerminalObjectAdapter((TerminalObjectImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

/*
 *	TerminalObjectServant
 */

TerminalObjectServant::TerminalObjectServant() : TangibleObjectImplementation() {
	_classHelper = TerminalObjectHelper::instance();
}

TerminalObjectServant::~TerminalObjectServant() {
}

void TerminalObjectServant::_setStub(DistributedObjectStub* stub) {
	_this = (TerminalObject*) stub;
	TangibleObjectServant::_setStub(stub);
}

DistributedObjectStub* TerminalObjectServant::_getStub() {
	return _this;
}

