/*
 *	server/zone/objects/tangible/TangibleObject.h generated by engine3 IDL compiler 0.55
 */

#ifndef TANGIBLEOBJECT_H_
#define TANGIBLEOBJECT_H_

#include "engine/orb/DistributedObjectBroker.h"

class SceneObject;

#include "FactionPointsList.h"

#include "../SceneObject.h"

class TangibleObject : public SceneObject {
public:
	TangibleObject(unsigned long long objectid, int type);

	void setFactionPointsList(FactionPointsList* fplist);

	void setOptionsBitmask(unsigned int bitmask);

	void setObjectCount(unsigned int count);

	void setConditionDamage(float damage);

	void setConditionMax(float max);

	void getCustomizationString(String& appearance);

	unsigned int getPvpStatusBitmask();

	FactionPointsList* getFactionPointsList();

	unsigned int getFaction();

	float getConditionDamage();

	float getConditionMax();

	unsigned int getOptionsBitmask();

	unsigned int getObjectCount();

	unsigned int getMovementUpdateCounter();

	unsigned int getNewMovementUpdateCounter(unsigned char count);

	unsigned int getNewDefenderUpdateCounter(unsigned char count);

	unsigned char getUnknownByte();

protected:
	TangibleObject(DummyConstructorParameter* param);

	virtual ~TangibleObject();

	friend class TangibleObjectHelper;
};

class TangibleObjectImplementation;

class TangibleObjectAdapter : public SceneObjectAdapter {
public:
	TangibleObjectAdapter(TangibleObjectImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void setFactionPointsList(FactionPointsList* fplist);

	void setOptionsBitmask(unsigned int bitmask);

	void setObjectCount(unsigned int count);

	void setConditionDamage(float damage);

	void setConditionMax(float max);

	void getCustomizationString(String& appearance);

	unsigned int getPvpStatusBitmask();

	FactionPointsList* getFactionPointsList();

	unsigned int getFaction();

	float getConditionDamage();

	float getConditionMax();

	unsigned int getOptionsBitmask();

	unsigned int getObjectCount();

	unsigned int getMovementUpdateCounter();

	unsigned int getNewMovementUpdateCounter(unsigned char count);

	unsigned int getNewDefenderUpdateCounter(unsigned char count);

	unsigned char getUnknownByte();

protected:
	String _param0_getCustomizationString__String_;
};

class TangibleObjectHelper : public DistributedObjectClassHelper, public Singleton<TangibleObjectHelper> {
	static TangibleObjectHelper* staticInitializer;

public:
	TangibleObjectHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<TangibleObjectHelper>;
};

#include "../SceneObjectImplementation.h"

class TangibleObjectServant : public SceneObjectImplementation {
public:
	TangibleObject* _this;

public:
	TangibleObjectServant(unsigned long long objectid, int type);
	virtual ~TangibleObjectServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*TANGIBLEOBJECT_H_*/
