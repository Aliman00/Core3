/*
 *	server/zone/objects/tangible/resourcecontainer/ResourceContainerObject.cpp generated by engine3 IDL compiler 0.55
 */

#include "ResourceContainerObject.h"

#include "ResourceContainerObjectImplementation.h"

#include "../TangibleObject.h"

/*
 *	ResourceContainerObjectStub
 */

ResourceContainerObject::ResourceContainerObject(unsigned long long objectid) : TangibleObject(DummyConstructorParameter::instance()) {
	_impl = new ResourceContainerObjectImplementation(objectid);
	_impl->_setStub(this);
}

ResourceContainerObject::ResourceContainerObject(DummyConstructorParameter* param) : TangibleObject(param) {
}

ResourceContainerObject::~ResourceContainerObject() {
}

/*
 *	ResourceContainerObjectAdapter
 */

ResourceContainerObjectAdapter::ResourceContainerObjectAdapter(ResourceContainerObjectImplementation* obj) : TangibleObjectAdapter(obj) {
}

Packet* ResourceContainerObjectAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	ResourceContainerObjectHelper
 */

ResourceContainerObjectHelper* ResourceContainerObjectHelper::staticInitializer = ResourceContainerObjectHelper::instance();

ResourceContainerObjectHelper::ResourceContainerObjectHelper() {
	className = "ResourceContainerObject";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void ResourceContainerObjectHelper::finalizeHelper() {
	ResourceContainerObjectHelper::finalize();
}

DistributedObject* ResourceContainerObjectHelper::instantiateObject() {
	return new ResourceContainerObject(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* ResourceContainerObjectHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new ResourceContainerObjectAdapter((ResourceContainerObjectImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

/*
 *	ResourceContainerObjectServant
 */

ResourceContainerObjectServant::ResourceContainerObjectServant(unsigned long long objectid, int type) : TangibleObjectImplementation(objectid, type) {
	_classHelper = ResourceContainerObjectHelper::instance();
}

ResourceContainerObjectServant::~ResourceContainerObjectServant() {
}

void ResourceContainerObjectServant::_setStub(DistributedObjectStub* stub) {
	_this = (ResourceContainerObject*) stub;
	TangibleObjectServant::_setStub(stub);
}

DistributedObjectStub* ResourceContainerObjectServant::_getStub() {
	return _this;
}

