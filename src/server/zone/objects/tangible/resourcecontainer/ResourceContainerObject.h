/*
 *	server/zone/objects/tangible/resourcecontainer/ResourceContainerObject.h generated by engine3 IDL compiler 0.55
 */

#ifndef RESOURCECONTAINEROBJECT_H_
#define RESOURCECONTAINEROBJECT_H_

#include "engine/orb/DistributedObjectBroker.h"

class TangibleObject;

#include "../TangibleObject.h"

class ResourceContainerObject : public TangibleObject {
public:
	ResourceContainerObject();

protected:
	ResourceContainerObject(DummyConstructorParameter* param);

	virtual ~ResourceContainerObject();

	friend class ResourceContainerObjectHelper;
};

class ResourceContainerObjectImplementation;

class ResourceContainerObjectAdapter : public TangibleObjectAdapter {
public:
	ResourceContainerObjectAdapter(ResourceContainerObjectImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

};

class ResourceContainerObjectHelper : public DistributedObjectClassHelper, public Singleton<ResourceContainerObjectHelper> {
	static ResourceContainerObjectHelper* staticInitializer;

public:
	ResourceContainerObjectHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<ResourceContainerObjectHelper>;
};

#include "../TangibleObjectImplementation.h"

class ResourceContainerObjectServant : public TangibleObjectImplementation {
public:
	ResourceContainerObject* _this;

public:
	ResourceContainerObjectServant();
	virtual ~ResourceContainerObjectServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*RESOURCECONTAINEROBJECT_H_*/
