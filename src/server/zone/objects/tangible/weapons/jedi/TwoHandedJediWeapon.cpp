/*
 *	server/zone/objects/tangible/weapons/jedi/TwoHandedJediWeapon.cpp generated by engine3 IDL compiler 0.55
 */

#include "../../../creature/CreatureObject.h"

#include "../JediWeapon.h"

#include "TwoHandedJediWeapon.h"

#include "TwoHandedJediWeaponImplementation.h"

/*
 *	TwoHandedJediWeaponStub
 */

TwoHandedJediWeapon::TwoHandedJediWeapon() : JediWeapon(NULL) {
}

TwoHandedJediWeapon::TwoHandedJediWeapon(DistributedObjectServant* obj) : JediWeapon(obj) {
}

TwoHandedJediWeapon::TwoHandedJediWeapon(TwoHandedJediWeapon& ref) : JediWeapon(ref) {
}

TwoHandedJediWeapon::~TwoHandedJediWeapon() {
}

TwoHandedJediWeapon* TwoHandedJediWeapon::clone() {
	return new TwoHandedJediWeapon(*this);
}


/*
 *	TwoHandedJediWeaponAdapter
 */

TwoHandedJediWeaponAdapter::TwoHandedJediWeaponAdapter(TwoHandedJediWeaponImplementation* obj) : JediWeaponAdapter(obj) {
}

Packet* TwoHandedJediWeaponAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	TwoHandedJediWeaponHelper
 */

TwoHandedJediWeaponHelper::TwoHandedJediWeaponHelper() {
	className = "TwoHandedJediWeapon";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void TwoHandedJediWeaponHelper::finalizeHelper() {
	TwoHandedJediWeaponHelper::finalize();
}

DistributedObject* TwoHandedJediWeaponHelper::instantiateObject() {
	return new TwoHandedJediWeapon();
}

DistributedObjectAdapter* TwoHandedJediWeaponHelper::createAdapter(DistributedObjectServant* obj) {
	DistributedObjectAdapter* adapter = new TwoHandedJediWeaponAdapter((TwoHandedJediWeaponImplementation*) obj);

	DistributedObjectStub* stub = new TwoHandedJediWeapon(obj);
	stub->_setClassName(className);
	stub->_setClassHelper(this);

	adapter->setStub(stub);

	obj->_setStub(stub);

	return adapter;
}

/*
 *	TwoHandedJediWeaponServant
 */

TwoHandedJediWeaponServant::TwoHandedJediWeaponServant(unsigned long long objid, unsigned int tempcrc, const unicode& n, const string& tempn, int tp, bool eqp) : JediWeaponImplementation(objid, tempcrc, n, tempn, tp, eqp) {
	_classHelper = TwoHandedJediWeaponHelper::instance();
}

TwoHandedJediWeaponServant::TwoHandedJediWeaponServant(CreatureObject* creature, const string& temp, const unicode& n, const string& tempn, int tp, bool eqp) : JediWeaponImplementation(creature, temp, n, tempn, tp, eqp) {
	_classHelper = TwoHandedJediWeaponHelper::instance();
}

TwoHandedJediWeaponServant::~TwoHandedJediWeaponServant() {
}

void TwoHandedJediWeaponServant::_setStub(DistributedObjectStub* stub) {
	_this = (TwoHandedJediWeapon*) stub;
	JediWeaponServant::_setStub(stub);
}

DistributedObjectStub* TwoHandedJediWeaponServant::_getStub() {
	return _this;
}

