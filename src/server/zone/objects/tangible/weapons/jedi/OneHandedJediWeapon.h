/*
 *	server/zone/objects/tangible/weapons/jedi/OneHandedJediWeapon.h generated by engine3 IDL compiler 0.55
 */

#ifndef ONEHANDEDJEDIWEAPON_H_
#define ONEHANDEDJEDIWEAPON_H_

#include "engine/orb/DistributedObjectBroker.h"

class CreatureObject;

class JediWeapon;

#include "../JediWeapon.h"

class OneHandedJediWeapon : public JediWeapon {
protected:
	OneHandedJediWeapon();
	OneHandedJediWeapon(DistributedObjectServant* obj);
	OneHandedJediWeapon(OneHandedJediWeapon& ref);

	virtual ~OneHandedJediWeapon();

public:
	OneHandedJediWeapon* clone();

	friend class OneHandedJediWeaponHelper;
};

class OneHandedJediWeaponImplementation;

class OneHandedJediWeaponAdapter : public JediWeaponAdapter {
public:
	OneHandedJediWeaponAdapter(OneHandedJediWeaponImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

};

class OneHandedJediWeaponHelper : public DistributedObjectClassHelper, public Singleton<OneHandedJediWeaponHelper> {
public:
	OneHandedJediWeaponHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectServant* obj);

	friend class SingletonWrapper<OneHandedJediWeaponHelper>;
};

#include "../JediWeaponImplementation.h"

class OneHandedJediWeaponServant : public JediWeaponImplementation {
public:
	OneHandedJediWeapon* _this;

public:
	OneHandedJediWeaponServant(unsigned long long objid, unsigned int tempcrc, const unicode& n, const string& tempn, int tp, bool eqp);
	OneHandedJediWeaponServant(CreatureObject* creature, const string& temp, const unicode& n, const string& tempn, int tp, bool eqp);
	virtual ~OneHandedJediWeaponServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*ONEHANDEDJEDIWEAPON_H_*/
