/*
 *	server/zone/objects/tangible/weapons/jedi/PolearmJediWeapon.cpp generated by engine3 IDL compiler 0.55
 */

#include "../../../creature/CreatureObject.h"

#include "../JediWeapon.h"

#include "PolearmJediWeapon.h"

#include "PolearmJediWeaponImplementation.h"

/*
 *	PolearmJediWeaponStub
 */

PolearmJediWeapon::PolearmJediWeapon() : JediWeapon(NULL) {
}

PolearmJediWeapon::PolearmJediWeapon(DistributedObjectServant* obj) : JediWeapon(obj) {
}

PolearmJediWeapon::PolearmJediWeapon(PolearmJediWeapon& ref) : JediWeapon(ref) {
}

PolearmJediWeapon::~PolearmJediWeapon() {
}

PolearmJediWeapon* PolearmJediWeapon::clone() {
	return new PolearmJediWeapon(*this);
}


/*
 *	PolearmJediWeaponAdapter
 */

PolearmJediWeaponAdapter::PolearmJediWeaponAdapter(PolearmJediWeaponImplementation* obj) : JediWeaponAdapter(obj) {
}

Packet* PolearmJediWeaponAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	PolearmJediWeaponHelper
 */

PolearmJediWeaponHelper* PolearmJediWeaponHelper::staticInitializer = PolearmJediWeaponHelper::instance();

PolearmJediWeaponHelper::PolearmJediWeaponHelper() {
	className = "PolearmJediWeapon";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void PolearmJediWeaponHelper::finalizeHelper() {
	PolearmJediWeaponHelper::finalize();
}

DistributedObject* PolearmJediWeaponHelper::instantiateObject() {
	return new PolearmJediWeapon();
}

DistributedObjectAdapter* PolearmJediWeaponHelper::createAdapter(DistributedObjectServant* obj) {
	DistributedObjectAdapter* adapter = new PolearmJediWeaponAdapter((PolearmJediWeaponImplementation*) obj);

	DistributedObjectStub* stub = new PolearmJediWeapon(obj);
	stub->_setClassName(className);
	stub->_setClassHelper(this);

	adapter->setStub(stub);

	obj->_setStub(stub);

	return adapter;
}

/*
 *	PolearmJediWeaponServant
 */

PolearmJediWeaponServant::PolearmJediWeaponServant(unsigned long long objid, unsigned int tempcrc, const unicode& n, const string& tempn, int tp, bool eqp) : JediWeaponImplementation(objid, tempcrc, n, tempn, tp, eqp) {
	_classHelper = PolearmJediWeaponHelper::instance();
}

PolearmJediWeaponServant::PolearmJediWeaponServant(CreatureObject* creature, const string& temp, const unicode& n, const string& tempn, int tp, bool eqp) : JediWeaponImplementation(creature, temp, n, tempn, tp, eqp) {
	_classHelper = PolearmJediWeaponHelper::instance();
}

PolearmJediWeaponServant::~PolearmJediWeaponServant() {
}

void PolearmJediWeaponServant::_setStub(DistributedObjectStub* stub) {
	_this = (PolearmJediWeapon*) stub;
	JediWeaponServant::_setStub(stub);
}

DistributedObjectStub* PolearmJediWeaponServant::_getStub() {
	return _this;
}

