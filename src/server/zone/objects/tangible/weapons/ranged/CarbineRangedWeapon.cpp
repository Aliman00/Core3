/*
 *	server/zone/objects/tangible/weapons/ranged/CarbineRangedWeapon.cpp generated by engine3 IDL compiler 0.55
 */

#include "../../../creature/CreatureObject.h"

#include "../RangedWeapon.h"

#include "CarbineRangedWeapon.h"

#include "CarbineRangedWeaponImplementation.h"

/*
 *	CarbineRangedWeaponStub
 */

CarbineRangedWeapon::CarbineRangedWeapon() : RangedWeapon(NULL) {
}

CarbineRangedWeapon::CarbineRangedWeapon(DistributedObjectServant* obj) : RangedWeapon(obj) {
}

CarbineRangedWeapon::CarbineRangedWeapon(CarbineRangedWeapon& ref) : RangedWeapon(ref) {
}

CarbineRangedWeapon::~CarbineRangedWeapon() {
}

CarbineRangedWeapon* CarbineRangedWeapon::clone() {
	return new CarbineRangedWeapon(*this);
}


/*
 *	CarbineRangedWeaponAdapter
 */

CarbineRangedWeaponAdapter::CarbineRangedWeaponAdapter(CarbineRangedWeaponImplementation* obj) : RangedWeaponAdapter(obj) {
}

Packet* CarbineRangedWeaponAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	CarbineRangedWeaponHelper
 */

CarbineRangedWeaponHelper::CarbineRangedWeaponHelper() {
	className = "CarbineRangedWeapon";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void CarbineRangedWeaponHelper::finalizeHelper() {
	CarbineRangedWeaponHelper::finalize();
}

DistributedObject* CarbineRangedWeaponHelper::instantiateObject() {
	return new CarbineRangedWeapon();
}

DistributedObjectAdapter* CarbineRangedWeaponHelper::createAdapter(DistributedObjectServant* obj) {
	DistributedObjectAdapter* adapter = new CarbineRangedWeaponAdapter((CarbineRangedWeaponImplementation*) obj);

	DistributedObjectStub* stub = new CarbineRangedWeapon(obj);
	stub->_setClassName(className);
	stub->_setClassHelper(this);

	adapter->setStub(stub);

	obj->_setStub(stub);

	return adapter;
}

/*
 *	CarbineRangedWeaponServant
 */

CarbineRangedWeaponServant::CarbineRangedWeaponServant(unsigned long long objid, unsigned int tempcrc, const unicode& n, const string& tempn, int tp, bool eqp) : RangedWeaponImplementation(objid, tempcrc, n, tempn, tp, eqp) {
	_classHelper = CarbineRangedWeaponHelper::instance();
}

CarbineRangedWeaponServant::CarbineRangedWeaponServant(CreatureObject* creature, const string& temp, const unicode& n, const string& tempn, int tp, bool eqp) : RangedWeaponImplementation(creature, temp, n, tempn, tp, eqp) {
	_classHelper = CarbineRangedWeaponHelper::instance();
}

CarbineRangedWeaponServant::~CarbineRangedWeaponServant() {
}

void CarbineRangedWeaponServant::_setStub(DistributedObjectStub* stub) {
	_this = (CarbineRangedWeapon*) stub;
	RangedWeaponServant::_setStub(stub);
}

DistributedObjectStub* CarbineRangedWeaponServant::_getStub() {
	return _this;
}

