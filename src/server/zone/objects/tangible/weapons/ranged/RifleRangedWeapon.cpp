/*
 *	server/zone/objects/tangible/weapons/ranged/RifleRangedWeapon.cpp generated by engine3 IDL compiler 0.55
 */

#include "../../../creature/CreatureObject.h"

#include "../RangedWeapon.h"

#include "RifleRangedWeapon.h"

#include "RifleRangedWeaponImplementation.h"

/*
 *	RifleRangedWeaponStub
 */

RifleRangedWeapon::RifleRangedWeapon() : RangedWeapon(NULL) {
}

RifleRangedWeapon::RifleRangedWeapon(DistributedObjectServant* obj) : RangedWeapon(obj) {
}

RifleRangedWeapon::RifleRangedWeapon(RifleRangedWeapon& ref) : RangedWeapon(ref) {
}

RifleRangedWeapon::~RifleRangedWeapon() {
}

RifleRangedWeapon* RifleRangedWeapon::clone() {
	return new RifleRangedWeapon(*this);
}


/*
 *	RifleRangedWeaponAdapter
 */

RifleRangedWeaponAdapter::RifleRangedWeaponAdapter(RifleRangedWeaponImplementation* obj) : RangedWeaponAdapter(obj) {
}

Packet* RifleRangedWeaponAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	RifleRangedWeaponHelper
 */

RifleRangedWeaponHelper::RifleRangedWeaponHelper() {
	className = "RifleRangedWeapon";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void RifleRangedWeaponHelper::finalizeHelper() {
	RifleRangedWeaponHelper::finalize();
}

DistributedObject* RifleRangedWeaponHelper::instantiateObject() {
	return new RifleRangedWeapon();
}

DistributedObjectAdapter* RifleRangedWeaponHelper::createAdapter(DistributedObjectServant* obj) {
	DistributedObjectAdapter* adapter = new RifleRangedWeaponAdapter((RifleRangedWeaponImplementation*) obj);

	DistributedObjectStub* stub = new RifleRangedWeapon(obj);
	stub->_setClassName(className);
	stub->_setClassHelper(this);

	adapter->setStub(stub);

	obj->_setStub(stub);

	return adapter;
}

/*
 *	RifleRangedWeaponServant
 */

RifleRangedWeaponServant::RifleRangedWeaponServant(unsigned long long objid, unsigned int tempcrc, const unicode& n, const string& tempn, int tp, bool eqp) : RangedWeaponImplementation(objid, tempcrc, n, tempn, tp, eqp) {
	_classHelper = RifleRangedWeaponHelper::instance();
}

RifleRangedWeaponServant::RifleRangedWeaponServant(CreatureObject* creature, const string& temp, const unicode& n, const string& tempn, int tp, bool eqp) : RangedWeaponImplementation(creature, temp, n, tempn, tp, eqp) {
	_classHelper = RifleRangedWeaponHelper::instance();
}

RifleRangedWeaponServant::~RifleRangedWeaponServant() {
}

void RifleRangedWeaponServant::_setStub(DistributedObjectStub* stub) {
	_this = (RifleRangedWeapon*) stub;
	RangedWeaponServant::_setStub(stub);
}

DistributedObjectStub* RifleRangedWeaponServant::_getStub() {
	return _this;
}

