/*
 *	server/zone/objects/tangible/weapons/MeleeWeapon.cpp generated by engine3 IDL compiler 0.55
 */

#include "../../creature/CreatureObject.h"

#include "Weapon.h"

#include "MeleeWeapon.h"

#include "MeleeWeaponImplementation.h"

/*
 *	MeleeWeaponStub
 */

MeleeWeapon::MeleeWeapon() : Weapon(NULL) {
}

MeleeWeapon::MeleeWeapon(DistributedObjectServant* obj) : Weapon(obj) {
}

MeleeWeapon::MeleeWeapon(MeleeWeapon& ref) : Weapon(ref) {
}

MeleeWeapon::~MeleeWeapon() {
}

MeleeWeapon* MeleeWeapon::clone() {
	return new MeleeWeapon(*this);
}


/*
 *	MeleeWeaponAdapter
 */

MeleeWeaponAdapter::MeleeWeaponAdapter(MeleeWeaponImplementation* obj) : WeaponAdapter(obj) {
}

Packet* MeleeWeaponAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	MeleeWeaponHelper
 */

MeleeWeaponHelper* MeleeWeaponHelper::staticInitializer = MeleeWeaponHelper::instance();

MeleeWeaponHelper::MeleeWeaponHelper() {
	className = "MeleeWeapon";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void MeleeWeaponHelper::finalizeHelper() {
	MeleeWeaponHelper::finalize();
}

DistributedObject* MeleeWeaponHelper::instantiateObject() {
	return new MeleeWeapon();
}

DistributedObjectAdapter* MeleeWeaponHelper::createAdapter(DistributedObjectServant* obj) {
	DistributedObjectAdapter* adapter = new MeleeWeaponAdapter((MeleeWeaponImplementation*) obj);

	DistributedObjectStub* stub = new MeleeWeapon(obj);
	stub->_setClassName(className);
	stub->_setClassHelper(this);

	adapter->setStub(stub);

	obj->_setStub(stub);

	return adapter;
}

/*
 *	MeleeWeaponServant
 */

MeleeWeaponServant::MeleeWeaponServant(unsigned long long objid, unsigned int tempcrc, const unicode& n, const string& tempn, bool eqp, int tp, int cat) : WeaponImplementation(objid, tempcrc, n, tempn, eqp, tp, cat) {
	_classHelper = MeleeWeaponHelper::instance();
}

MeleeWeaponServant::MeleeWeaponServant(CreatureObject* creature, const string& temp, const unicode& n, const string& tempn, bool eqp, int tp, int cat) : WeaponImplementation(creature, temp, n, tempn, eqp, tp, cat) {
	_classHelper = MeleeWeaponHelper::instance();
}

MeleeWeaponServant::~MeleeWeaponServant() {
}

void MeleeWeaponServant::_setStub(DistributedObjectStub* stub) {
	_this = (MeleeWeapon*) stub;
	WeaponServant::_setStub(stub);
}

DistributedObjectStub* MeleeWeaponServant::_getStub() {
	return _this;
}

