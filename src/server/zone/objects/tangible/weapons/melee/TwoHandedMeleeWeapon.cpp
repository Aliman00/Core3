/*
 *	server/zone/objects/tangible/weapons/melee/TwoHandedMeleeWeapon.cpp generated by engine3 IDL compiler 0.55
 */

#include "../../../creature/CreatureObject.h"

#include "../MeleeWeapon.h"

#include "TwoHandedMeleeWeapon.h"

#include "TwoHandedMeleeWeaponImplementation.h"

/*
 *	TwoHandedMeleeWeaponStub
 */

TwoHandedMeleeWeapon::TwoHandedMeleeWeapon() : MeleeWeapon(NULL) {
}

TwoHandedMeleeWeapon::TwoHandedMeleeWeapon(DistributedObjectServant* obj) : MeleeWeapon(obj) {
}

TwoHandedMeleeWeapon::TwoHandedMeleeWeapon(TwoHandedMeleeWeapon& ref) : MeleeWeapon(ref) {
}

TwoHandedMeleeWeapon::~TwoHandedMeleeWeapon() {
}

TwoHandedMeleeWeapon* TwoHandedMeleeWeapon::clone() {
	return new TwoHandedMeleeWeapon(*this);
}


/*
 *	TwoHandedMeleeWeaponAdapter
 */

TwoHandedMeleeWeaponAdapter::TwoHandedMeleeWeaponAdapter(TwoHandedMeleeWeaponImplementation* obj) : MeleeWeaponAdapter(obj) {
}

Packet* TwoHandedMeleeWeaponAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	TwoHandedMeleeWeaponHelper
 */

TwoHandedMeleeWeaponHelper::TwoHandedMeleeWeaponHelper() {
	className = "TwoHandedMeleeWeapon";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void TwoHandedMeleeWeaponHelper::finalizeHelper() {
	TwoHandedMeleeWeaponHelper::finalize();
}

DistributedObject* TwoHandedMeleeWeaponHelper::instantiateObject() {
	return new TwoHandedMeleeWeapon();
}

DistributedObjectAdapter* TwoHandedMeleeWeaponHelper::createAdapter(DistributedObjectServant* obj) {
	DistributedObjectAdapter* adapter = new TwoHandedMeleeWeaponAdapter((TwoHandedMeleeWeaponImplementation*) obj);

	DistributedObjectStub* stub = new TwoHandedMeleeWeapon(obj);
	stub->_setClassName(className);
	stub->_setClassHelper(this);

	adapter->setStub(stub);

	obj->_setStub(stub);

	return adapter;
}

/*
 *	TwoHandedMeleeWeaponServant
 */

TwoHandedMeleeWeaponServant::TwoHandedMeleeWeaponServant(unsigned long long objid, unsigned int tempcrc, const unicode& n, const string& tempn, int tp, bool eqp) : MeleeWeaponImplementation(objid, tempcrc, n, tempn, tp, eqp) {
	_classHelper = TwoHandedMeleeWeaponHelper::instance();
}

TwoHandedMeleeWeaponServant::TwoHandedMeleeWeaponServant(CreatureObject* creature, const string& temp, const unicode& n, const string& tempn, int tp, bool eqp) : MeleeWeaponImplementation(creature, temp, n, tempn, tp, eqp) {
	_classHelper = TwoHandedMeleeWeaponHelper::instance();
}

TwoHandedMeleeWeaponServant::~TwoHandedMeleeWeaponServant() {
}

void TwoHandedMeleeWeaponServant::_setStub(DistributedObjectStub* stub) {
	_this = (TwoHandedMeleeWeapon*) stub;
	MeleeWeaponServant::_setStub(stub);
}

DistributedObjectStub* TwoHandedMeleeWeaponServant::_getStub() {
	return _this;
}

