/*
 *	server/zone/objects/tangible/creature/CreatureObject.h generated by engine3 IDL compiler 0.55
 */

#ifndef CREATUREOBJECT_H_
#define CREATUREOBJECT_H_

#include "engine/orb/DistributedObjectBroker.h"

#include "FactionRank.h"

class TangibleObject;

class SceneObject;

class GroupObject;

class GuildObject;

#include "../TangibleObject.h"

class CreatureObject : public TangibleObject {
public:
	CreatureObject(unsigned long long objectid, int type = 400);

	void updateTargetObject(unsigned long long targetid, bool updateclients = true);

	void updateTargetObject(SceneObject* target, bool updateclients = true);

	void setLastMovementStamp(unsigned int timestamp);

	void setMovementCounter(unsigned int counter);

	void setHairObject(TangibleObject* hair);

	void setMoodID(unsigned char moodid);

	void setBankCredits(unsigned int credits);

	void setCashCredits(unsigned int credits);

	void setHeight(float value);

	void setFactionRank(FactionRank* rank);

	void setGroupObject(GroupObject* groupobject);

	void setGuildObject(GuildObject* guildobject);

	GroupObject* getGroupObject();

	GuildObject* getGuildObject();

	unsigned int getLastMovementStamp();

	TangibleObject* getHairObject();

	unsigned char getMoodID();

	float getHeight();

	unsigned int getBankCredits();

	unsigned int getCashCredits();

	FactionRank* getFactionRank();

	String& getMoodName();

	unsigned long long getStatesBitmask();

	unsigned char getPosture();

	bool isGrouped();

	bool isGuilded();

protected:
	CreatureObject(DummyConstructorParameter* param);

	virtual ~CreatureObject();

	String _return_getMoodName;

	friend class CreatureObjectHelper;
};

class CreatureObjectImplementation;

class CreatureObjectAdapter : public TangibleObjectAdapter {
public:
	CreatureObjectAdapter(CreatureObjectImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void updateTargetObject(unsigned long long targetid, bool updateclients);

	void updateTargetObject(SceneObject* target, bool updateclients);

	void setLastMovementStamp(unsigned int timestamp);

	void setMovementCounter(unsigned int counter);

	void setHairObject(TangibleObject* hair);

	void setMoodID(unsigned char moodid);

	void setBankCredits(unsigned int credits);

	void setCashCredits(unsigned int credits);

	void setHeight(float value);

	void setFactionRank(FactionRank* rank);

	void setGroupObject(GroupObject* groupobject);

	void setGuildObject(GuildObject* guildobject);

	GroupObject* getGroupObject();

	GuildObject* getGuildObject();

	unsigned int getLastMovementStamp();

	TangibleObject* getHairObject();

	unsigned char getMoodID();

	float getHeight();

	unsigned int getBankCredits();

	unsigned int getCashCredits();

	FactionRank* getFactionRank();

	String& getMoodName();

	unsigned long long getStatesBitmask();

	unsigned char getPosture();

	bool isGrouped();

	bool isGuilded();

};

class CreatureObjectHelper : public DistributedObjectClassHelper, public Singleton<CreatureObjectHelper> {
	static CreatureObjectHelper* staticInitializer;

public:
	CreatureObjectHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<CreatureObjectHelper>;
};

#include "../TangibleObjectImplementation.h"

class CreatureObjectServant : public TangibleObjectImplementation {
public:
	CreatureObject* _this;

public:
	CreatureObjectServant(unsigned long long objectid, int type);
	virtual ~CreatureObjectServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*CREATUREOBJECT_H_*/
