/*
 *	server/zone/objects/tangible/creature/CreatureObject.h generated by engine3 IDL compiler 0.55
 */

#ifndef CREATUREOBJECT_H_
#define CREATUREOBJECT_H_

#include "engine/orb/DistributedObjectBroker.h"

class TangibleObject;

#include "../TangibleObject.h"

class CreatureObject : public TangibleObject {
public:
	CreatureObject();

protected:
	CreatureObject(DummyConstructorParameter* param);

	virtual ~CreatureObject();

	friend class CreatureObjectHelper;
};

class CreatureObjectImplementation;

class CreatureObjectAdapter : public TangibleObjectAdapter {
public:
	CreatureObjectAdapter(CreatureObjectImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

};

class CreatureObjectHelper : public DistributedObjectClassHelper, public Singleton<CreatureObjectHelper> {
	static CreatureObjectHelper* staticInitializer;

public:
	CreatureObjectHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<CreatureObjectHelper>;
};

#include "../TangibleObjectImplementation.h"

class CreatureObjectServant : public TangibleObjectImplementation {
public:
	CreatureObject* _this;

public:
	CreatureObjectServant();
	virtual ~CreatureObjectServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*CREATUREOBJECT_H_*/
