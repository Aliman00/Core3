/*
 *	server/zone/objects/tangible/wearable/clothing/ClothingObject.cpp generated by engine3 IDL compiler 0.55
 */

#include "ClothingObject.h"

#include "ClothingObjectImplementation.h"

#include "../WearableObject.h"

/*
 *	ClothingObjectStub
 */

ClothingObject::ClothingObject() : WearableObject(DummyConstructorParameter::instance()) {
	_impl = new ClothingObjectImplementation();
	_impl->_setStub(this);
}

ClothingObject::ClothingObject(DummyConstructorParameter* param) : WearableObject(param) {
}

ClothingObject::~ClothingObject() {
}

/*
 *	ClothingObjectAdapter
 */

ClothingObjectAdapter::ClothingObjectAdapter(ClothingObjectImplementation* obj) : WearableObjectAdapter(obj) {
}

Packet* ClothingObjectAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	ClothingObjectHelper
 */

ClothingObjectHelper* ClothingObjectHelper::staticInitializer = ClothingObjectHelper::instance();

ClothingObjectHelper::ClothingObjectHelper() {
	className = "ClothingObject";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void ClothingObjectHelper::finalizeHelper() {
	ClothingObjectHelper::finalize();
}

DistributedObject* ClothingObjectHelper::instantiateObject() {
	return new ClothingObject(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* ClothingObjectHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new ClothingObjectAdapter((ClothingObjectImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

/*
 *	ClothingObjectServant
 */

ClothingObjectServant::ClothingObjectServant() : WearableObjectImplementation() {
	_classHelper = ClothingObjectHelper::instance();
}

ClothingObjectServant::~ClothingObjectServant() {
}

void ClothingObjectServant::_setStub(DistributedObjectStub* stub) {
	_this = (ClothingObject*) stub;
	WearableObjectServant::_setStub(stub);
}

DistributedObjectStub* ClothingObjectServant::_getStub() {
	return _this;
}

