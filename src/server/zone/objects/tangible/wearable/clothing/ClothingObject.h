/*
 *	server/zone/objects/tangible/wearable/clothing/ClothingObject.h generated by engine3 IDL compiler 0.55
 */

#ifndef CLOTHINGOBJECT_H_
#define CLOTHINGOBJECT_H_

#include "engine/orb/DistributedObjectBroker.h"

class WearableObject;

#include "../WearableObject.h"

class ClothingObject : public WearableObject {
public:
	ClothingObject();

protected:
	ClothingObject(DummyConstructorParameter* param);

	virtual ~ClothingObject();

	friend class ClothingObjectHelper;
};

class ClothingObjectImplementation;

class ClothingObjectAdapter : public WearableObjectAdapter {
public:
	ClothingObjectAdapter(ClothingObjectImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

};

class ClothingObjectHelper : public DistributedObjectClassHelper, public Singleton<ClothingObjectHelper> {
	static ClothingObjectHelper* staticInitializer;

public:
	ClothingObjectHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<ClothingObjectHelper>;
};

#include "../WearableObjectImplementation.h"

class ClothingObjectServant : public WearableObjectImplementation {
public:
	ClothingObject* _this;

public:
	ClothingObjectServant();
	virtual ~ClothingObjectServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*CLOTHINGOBJECT_H_*/
