/*
 *	server/zone/objects/tangible/deed/DeedObject.cpp generated by engine3 IDL compiler 0.55
 */

#include "DeedObject.h"

#include "DeedObjectImplementation.h"

#include "../TangibleObject.h"

/*
 *	DeedObjectStub
 */

DeedObject::DeedObject(unsigned long long objectid, int type) : TangibleObject(DummyConstructorParameter::instance()) {
	_impl = new DeedObjectImplementation(objectid, type);
	_impl->_setStub(this);
}

DeedObject::DeedObject(DummyConstructorParameter* param) : TangibleObject(param) {
}

DeedObject::~DeedObject() {
}

/*
 *	DeedObjectAdapter
 */

DeedObjectAdapter::DeedObjectAdapter(DeedObjectImplementation* obj) : TangibleObjectAdapter(obj) {
}

Packet* DeedObjectAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	DeedObjectHelper
 */

DeedObjectHelper* DeedObjectHelper::staticInitializer = DeedObjectHelper::instance();

DeedObjectHelper::DeedObjectHelper() {
	className = "DeedObject";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void DeedObjectHelper::finalizeHelper() {
	DeedObjectHelper::finalize();
}

DistributedObject* DeedObjectHelper::instantiateObject() {
	return new DeedObject(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* DeedObjectHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new DeedObjectAdapter((DeedObjectImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

/*
 *	DeedObjectServant
 */

DeedObjectServant::DeedObjectServant(unsigned long long objectid, int type) : TangibleObjectImplementation(objectid, type) {
	_classHelper = DeedObjectHelper::instance();
}

DeedObjectServant::~DeedObjectServant() {
}

void DeedObjectServant::_setStub(DistributedObjectStub* stub) {
	_this = (DeedObject*) stub;
	TangibleObjectServant::_setStub(stub);
}

DistributedObjectStub* DeedObjectServant::_getStub() {
	return _this;
}

