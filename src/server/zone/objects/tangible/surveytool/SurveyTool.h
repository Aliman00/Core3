/*
 *	server/zone/objects/tangible/surveytool/SurveyTool.h generated by engine3 IDL compiler 0.55
 */

#ifndef SURVEYTOOL_H_
#define SURVEYTOOL_H_

#include "engine/orb/DistributedObjectBroker.h"

class TangibleObject;

class packets;

class Player;

class CreatureObject;

#include "engine/service/Message.h"

#include "../TangibleObject.h"

class SurveyTool : public TangibleObject {
protected:
	SurveyTool();
	SurveyTool(DistributedObjectServant* obj);
	SurveyTool(SurveyTool& ref);

	virtual ~SurveyTool();

public:
	SurveyTool* clone();

	int useObject(Player* player);

	int getSurveyToolType();

	int getSurveyToolRange();

	void setSurveyToolRange(int range);

	void sendSurveyEffect(Player* player);

	void sendSampleEffect(Player* player);

	void surveyRequest(Player* player, unicode& resourceName);

	void sampleRequest(Player* player, unicode& resourceName);

protected:
	friend class SurveyToolHelper;
};

class SurveyToolImplementation;

class SurveyToolAdapter : public TangibleObjectAdapter {
public:
	SurveyToolAdapter(SurveyToolImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	int useObject(Player* player);

	int getSurveyToolType();

	int getSurveyToolRange();

	void setSurveyToolRange(int range);

	void sendSurveyEffect(Player* player);

	void sendSampleEffect(Player* player);

	void surveyRequest(Player* player, unicode& resourceName);

	void sampleRequest(Player* player, unicode& resourceName);

protected:
	unicode _param1_surveyRequest__Player_unicode_;
	unicode _param1_sampleRequest__Player_unicode_;
};

class SurveyToolHelper : public DistributedObjectClassHelper, public Singleton<SurveyToolHelper> {
public:
	SurveyToolHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectServant* obj);

	friend class SingletonWrapper<SurveyToolHelper>;
};

#include "../TangibleObjectImplementation.h"

class SurveyToolServant : public TangibleObjectImplementation {
public:
	SurveyTool* _this;

public:
	SurveyToolServant(CreatureObject* creature, const unicode& n, const string& tempn, int tempCRC, int tp);
	SurveyToolServant(unsigned long long oid, const unicode& n, const string& tempn, int tempCRC, int tp);
	virtual ~SurveyToolServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*SURVEYTOOL_H_*/
