/*
 *	server/zone/objects/tangible/building/BuildingObject.h generated by engine3 IDL compiler 0.55
 */

#ifndef BUILDINGOBJECT_H_
#define BUILDINGOBJECT_H_

#include "engine/orb/DistributedObjectBroker.h"

class TangibleObject;

#include "../TangibleObject.h"

class BuildingObject : public TangibleObject {
public:
	BuildingObject();

protected:
	BuildingObject(DummyConstructorParameter* param);

	virtual ~BuildingObject();

	friend class BuildingObjectHelper;
};

class BuildingObjectImplementation;

class BuildingObjectAdapter : public TangibleObjectAdapter {
public:
	BuildingObjectAdapter(BuildingObjectImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

};

class BuildingObjectHelper : public DistributedObjectClassHelper, public Singleton<BuildingObjectHelper> {
	static BuildingObjectHelper* staticInitializer;

public:
	BuildingObjectHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<BuildingObjectHelper>;
};

#include "../TangibleObjectImplementation.h"

class BuildingObjectServant : public TangibleObjectImplementation {
public:
	BuildingObject* _this;

public:
	BuildingObjectServant();
	virtual ~BuildingObjectServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*BUILDINGOBJECT_H_*/
