/*
 *	server/zone/managers/guild/GuildMap.h generated by engine3 IDL compiler 0.55
 */

#ifndef GUILDMAP_H_
#define GUILDMAP_H_

#include "engine/orb/DistributedObjectBroker.h"

class Guild;

class GuildMap : public DistributedObjectStub {
protected:
	GuildMap();
	GuildMap(DistributedObjectServant* obj);
	GuildMap(GuildMap& ref);

	virtual ~GuildMap();

public:
	GuildMap* clone();

	void add(Guild* guild);

	Guild* get(int index);

	Guild* get(unsigned int gid);

	Guild* get(string& tag);

	void remove(unsigned int gid);

	void removeAll();

	int size();

protected:
	friend class GuildMapHelper;
};

class GuildMapImplementation;

class GuildMapAdapter : public DistributedObjectAdapter {
public:
	GuildMapAdapter(GuildMapImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void add(Guild* guild);

	Guild* get(int index);

	Guild* get(unsigned int gid);

	Guild* get(string& tag);

	void remove(unsigned int gid);

	void removeAll();

	int size();

protected:
	string _param0_get__string_;
};

class GuildMapHelper : public DistributedObjectClassHelper, public Singleton<GuildMapHelper> {
	static GuildMapHelper* staticInitializer;

public:
	GuildMapHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectServant* obj);

	friend class SingletonWrapper<GuildMapHelper>;
};

class GuildMapServant : public DistributedObjectServant {
public:
	GuildMap* _this;

public:
	GuildMapServant();
	virtual ~GuildMapServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*GUILDMAP_H_*/
