/*
 *	server/zone/managers/creature/CreatureManager.h generated by engine3 IDL compiler 0.55
 */

#ifndef CREATUREMANAGER_H_
#define CREATUREMANAGER_H_

#include "engine/orb/DistributedObjectBroker.h"

#include "engine/util/Coordinate.h"

class Zone;

#include "server/zone/ZoneProcessServerImplementation.h"

class CreatureObject;

class CreatureManager : public DistributedObjectStub {
public:
	CreatureManager(Zone* zone, ZoneProcessServerImplementation* processor);

	void start();

	void stop();

protected:
	CreatureManager(DummyConstructorParameter* param);

	virtual ~CreatureManager();

	friend class CreatureManagerHelper;
};

class CreatureManagerImplementation;

class CreatureManagerAdapter : public DistributedObjectAdapter {
public:
	CreatureManagerAdapter(CreatureManagerImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void start();

	void stop();

};

class CreatureManagerHelper : public DistributedObjectClassHelper, public Singleton<CreatureManagerHelper> {
	static CreatureManagerHelper* staticInitializer;

public:
	CreatureManagerHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<CreatureManagerHelper>;
};

class CreatureManagerServant : public DistributedObjectServant {
public:
	CreatureManager* _this;

public:
	CreatureManagerServant();
	virtual ~CreatureManagerServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*CREATUREMANAGER_H_*/
