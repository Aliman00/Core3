/*
 *	server/zone/managers/auction/AuctionManager.h generated by engine3 IDL compiler 0.55
 */

#ifndef AUCTIONMANAGER_H_
#define AUCTIONMANAGER_H_

#include "engine/orb/DistributedObjectBroker.h"

class AuctionManager : public DistributedObjectStub {
public:
	AuctionManager();

protected:
	AuctionManager(DummyConstructorParameter* param);

	virtual ~AuctionManager();

	friend class AuctionManagerHelper;
};

class AuctionManagerImplementation;

class AuctionManagerAdapter : public DistributedObjectAdapter {
public:
	AuctionManagerAdapter(AuctionManagerImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

};

class AuctionManagerHelper : public DistributedObjectClassHelper, public Singleton<AuctionManagerHelper> {
	static AuctionManagerHelper* staticInitializer;

public:
	AuctionManagerHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<AuctionManagerHelper>;
};

class AuctionManagerServant : public DistributedObjectServant {
public:
	AuctionManager* _this;

public:
	AuctionManagerServant();
	virtual ~AuctionManagerServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*AUCTIONMANAGER_H_*/
