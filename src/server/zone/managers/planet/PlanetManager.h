/*
 *	server/zone/managers/planet/PlanetManager.h generated by engine3 IDL compiler 0.55
 */

#ifndef PLANETMANAGER_H_
#define PLANETMANAGER_H_

#include "engine/orb/DistributedObjectBroker.h"

class Player;

class ShuttleCreature;

class BuildingObject;

class CellObject;

#include "engine/util/Coordinate.h"

class PlanetManager : public DistributedObjectStub {
protected:
	PlanetManager();
	PlanetManager(DistributedObjectServant* obj);
	PlanetManager(PlanetManager& ref);

	virtual ~PlanetManager();

public:
	PlanetManager* clone();

	void init();

	void start();

	void stop();

	unsigned long long getNextStaticObjectID(bool doLock = true);

	void landShuttles();

	void takeOffShuttles();

	ShuttleCreature* getShuttle(const string& Shuttle);

	void sendPlanetTravelPointListResponse(Player* player);

	CellObject* getCell(unsigned long long id);

	BuildingObject* getBuilding(unsigned long long id);

	unsigned long long getLandingTime();

protected:
	friend class PlanetManagerHelper;
};

class PlanetManagerImplementation;

class PlanetManagerAdapter : public DistributedObjectAdapter {
public:
	PlanetManagerAdapter(PlanetManagerImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void init();

	void start();

	void stop();

	unsigned long long getNextStaticObjectID(bool doLock);

	void landShuttles();

	void takeOffShuttles();

	ShuttleCreature* getShuttle(const string& Shuttle);

	void sendPlanetTravelPointListResponse(Player* player);

	CellObject* getCell(unsigned long long id);

	BuildingObject* getBuilding(unsigned long long id);

	unsigned long long getLandingTime();

protected:
	string _param0_getShuttle__string_;
};

class PlanetManagerHelper : public DistributedObjectClassHelper, public Singleton<PlanetManagerHelper> {
public:
	PlanetManagerHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectServant* obj);

	friend class SingletonWrapper<PlanetManagerHelper>;
};

class PlanetManagerServant : public DistributedObjectServant {
public:
	PlanetManager* _this;

public:
	PlanetManagerServant();
	virtual ~PlanetManagerServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*PLANETMANAGER_H_*/
