/*
 *	server/zone/managers/item/ItemManager.cpp generated by engine3 IDL compiler 0.55
 */

#include "ItemManager.h"

#include "ItemManagerImplementation.h"

/*
 *	ItemManagerStub
 */

ItemManager::ItemManager() {
	_impl = new ItemManagerImplementation();
	_impl->_setStub(this);
}

ItemManager::ItemManager(DummyConstructorParameter* param) {
	_impl = NULL;
}

ItemManager::~ItemManager() {
}

/*
 *	ItemManagerAdapter
 */

ItemManagerAdapter::ItemManagerAdapter(ItemManagerImplementation* obj) : DistributedObjectAdapter((DistributedObjectServant*) obj) {
}

Packet* ItemManagerAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	ItemManagerHelper
 */

ItemManagerHelper* ItemManagerHelper::staticInitializer = ItemManagerHelper::instance();

ItemManagerHelper::ItemManagerHelper() {
	className = "ItemManager";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void ItemManagerHelper::finalizeHelper() {
	ItemManagerHelper::finalize();
}

DistributedObject* ItemManagerHelper::instantiateObject() {
	return new ItemManager(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* ItemManagerHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new ItemManagerAdapter((ItemManagerImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

/*
 *	ItemManagerServant
 */

ItemManagerServant::ItemManagerServant() {
	_classHelper = ItemManagerHelper::instance();
}

ItemManagerServant::~ItemManagerServant() {
}

void ItemManagerServant::_setStub(DistributedObjectStub* stub) {
	_this = (ItemManager*) stub;
}

DistributedObjectStub* ItemManagerServant::_getStub() {
	return _this;
}

