/*
 *	server/zone/managers/crafting/CraftingManager.cpp generated by engine3 IDL compiler 0.55
 */

#include "CraftingManager.h"

#include "CraftingManagerImplementation.h"

/*
 *	CraftingManagerStub
 */

CraftingManager::CraftingManager() {
	_impl = new CraftingManagerImplementation();
	_impl->_setStub(this);
}

CraftingManager::CraftingManager(DummyConstructorParameter* param) {
	_impl = NULL;
}

CraftingManager::~CraftingManager() {
}

/*
 *	CraftingManagerAdapter
 */

CraftingManagerAdapter::CraftingManagerAdapter(CraftingManagerImplementation* obj) : DistributedObjectAdapter((DistributedObjectServant*) obj) {
}

Packet* CraftingManagerAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	CraftingManagerHelper
 */

CraftingManagerHelper* CraftingManagerHelper::staticInitializer = CraftingManagerHelper::instance();

CraftingManagerHelper::CraftingManagerHelper() {
	className = "CraftingManager";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void CraftingManagerHelper::finalizeHelper() {
	CraftingManagerHelper::finalize();
}

DistributedObject* CraftingManagerHelper::instantiateObject() {
	return new CraftingManager(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* CraftingManagerHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new CraftingManagerAdapter((CraftingManagerImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

/*
 *	CraftingManagerServant
 */

CraftingManagerServant::CraftingManagerServant() {
	_classHelper = CraftingManagerHelper::instance();
}

CraftingManagerServant::~CraftingManagerServant() {
}

void CraftingManagerServant::_setStub(DistributedObjectStub* stub) {
	_this = (CraftingManager*) stub;
}

DistributedObjectStub* CraftingManagerServant::_getStub() {
	return _this;
}

