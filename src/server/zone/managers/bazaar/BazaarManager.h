/*
 *	server/zone/managers/bazaar/BazaarManager.h generated by engine3 IDL compiler 0.60
 */

#ifndef BAZAARMANAGER_H_
#define BAZAARMANAGER_H_

#include "engine/orb/DistributedObjectBroker.h"

#include "engine/core/ManagedReference.h"

#include "engine/core/ManagedWeakReference.h"

namespace server {
namespace zone {

class ZoneProcessServerImplementation;

} // namespace zone
} // namespace server

using namespace server::zone;

namespace server {
namespace zone {
namespace managers {
namespace object {

class ObjectManager;

} // namespace object
} // namespace managers
} // namespace zone
} // namespace server

using namespace server::zone::managers::object;

namespace server {
namespace zone {
namespace packets {

class MessageCallback;

} // namespace packets
} // namespace zone
} // namespace server

using namespace server::zone::packets;

namespace server {
namespace zone {
namespace objects {
namespace tangible {

class TangibleObject;

} // namespace tangible
} // namespace objects
} // namespace zone
} // namespace server

using namespace server::zone::objects::tangible;

namespace server {
namespace zone {

class ZoneServer;

} // namespace zone
} // namespace server

using namespace server::zone;

#include "engine/log/Logger.h"

#include "engine/lua/Lua.h"

#include "system/util/VectorMap.h"

#include "engine/core/ManagedObject.h"

namespace server {
namespace zone {
namespace managers {
namespace bazaar {

class BazaarManager : public ManagedObject {
public:
	BazaarManager();

protected:
	BazaarManager(DummyConstructorParameter* param);

	virtual ~BazaarManager();

	friend class BazaarManagerHelper;
};

} // namespace bazaar
} // namespace managers
} // namespace zone
} // namespace server

using namespace server::zone::managers::bazaar;

namespace server {
namespace zone {
namespace managers {
namespace bazaar {

class BazaarManagerImplementation : public ManagedObjectImplementation {

public:
	BazaarManagerImplementation();

	BazaarManagerImplementation(DummyConstructorParameter* param);

	BazaarManager* _this;

	operator const BazaarManager*();

	DistributedObjectStub* _getStub();
protected:
	virtual ~BazaarManagerImplementation();

	void finalize();

	void _initializeImplementation();

	void _setStub(DistributedObjectStub* stub);

	void lock(bool doLock = true);

	void lock(ManagedObject* obj);

	void rlock(bool doLock = true);

	void wlock(bool doLock = true);

	void wlock(ManagedObject* obj);

	void unlock(bool doLock = true);

	void runlock(bool doLock = true);

	void _serializationHelperMethod();

	friend class BazaarManager;
};

class BazaarManagerAdapter : public ManagedObjectAdapter {
public:
	BazaarManagerAdapter(BazaarManagerImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

};

class BazaarManagerHelper : public DistributedObjectClassHelper, public Singleton<BazaarManagerHelper> {
	static BazaarManagerHelper* staticInitializer;

public:
	BazaarManagerHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectServant* instantiateServant();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class Singleton<BazaarManagerHelper>;
};

} // namespace bazaar
} // namespace managers
} // namespace zone
} // namespace server

using namespace server::zone::managers::bazaar;

#endif /*BAZAARMANAGER_H_*/
