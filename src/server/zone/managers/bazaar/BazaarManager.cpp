/*
 *	server/zone/managers/bazaar/BazaarManager.cpp generated by engine3 IDL compiler 0.60
 */

#include "BazaarManager.h"

#include "server/zone/ZoneProcessServerImplementation.h"

#include "server/zone/managers/object/ObjectManager.h"

#include "server/zone/packets/MessageCallback.h"

#include "server/zone/objects/tangible/TangibleObject.h"

#include "server/zone/ZoneServer.h"

/*
 *	BazaarManagerStub
 */

BazaarManager::BazaarManager() : ManagedObject(DummyConstructorParameter::instance()) {
	_impl = new BazaarManagerImplementation();
	_impl->_setStub(this);
}

BazaarManager::BazaarManager(DummyConstructorParameter* param) : ManagedObject(param) {
}

BazaarManager::~BazaarManager() {
}


/*
 *	BazaarManagerImplementation
 */

BazaarManagerImplementation::BazaarManagerImplementation(DummyConstructorParameter* param) : ManagedObjectImplementation(param) {
	_initializeImplementation();
}

BazaarManagerImplementation::~BazaarManagerImplementation() {
}


void BazaarManagerImplementation::finalize() {
}

void BazaarManagerImplementation::_initializeImplementation() {
	_setClassHelper(BazaarManagerHelper::instance());

	_serializationHelperMethod();
}

void BazaarManagerImplementation::_setStub(DistributedObjectStub* stub) {
	_this = (BazaarManager*) stub;
	ManagedObjectImplementation::_setStub(stub);
}

DistributedObjectStub* BazaarManagerImplementation::_getStub() {
	return _this;
}

BazaarManagerImplementation::operator const BazaarManager*() {
	return _this;
}

void BazaarManagerImplementation::lock(bool doLock) {
	_this->lock(doLock);
}

void BazaarManagerImplementation::lock(ManagedObject* obj) {
	_this->lock(obj);
}

void BazaarManagerImplementation::rlock(bool doLock) {
	_this->rlock(doLock);
}

void BazaarManagerImplementation::wlock(bool doLock) {
	_this->wlock(doLock);
}

void BazaarManagerImplementation::wlock(ManagedObject* obj) {
	_this->wlock(obj);
}

void BazaarManagerImplementation::unlock(bool doLock) {
	_this->unlock(doLock);
}

void BazaarManagerImplementation::runlock(bool doLock) {
	_this->runlock(doLock);
}

void BazaarManagerImplementation::_serializationHelperMethod() {
	ManagedObjectImplementation::_serializationHelperMethod();

	_setClassName("BazaarManager");

}

/*
 *	BazaarManagerAdapter
 */

BazaarManagerAdapter::BazaarManagerAdapter(BazaarManagerImplementation* obj) : ManagedObjectAdapter(obj) {
}

Packet* BazaarManagerAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	BazaarManagerHelper
 */

BazaarManagerHelper* BazaarManagerHelper::staticInitializer = BazaarManagerHelper::instance();

BazaarManagerHelper::BazaarManagerHelper() {
	className = "BazaarManager";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void BazaarManagerHelper::finalizeHelper() {
	BazaarManagerHelper::finalize();
}

DistributedObject* BazaarManagerHelper::instantiateObject() {
	return new BazaarManager(DummyConstructorParameter::instance());
}

DistributedObjectServant* BazaarManagerHelper::instantiateServant() {
	return new BazaarManagerImplementation(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* BazaarManagerHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new BazaarManagerAdapter((BazaarManagerImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

