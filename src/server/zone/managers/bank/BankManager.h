/*
 *	server/zone/managers/bank/BankManager.h generated by engine3 IDL compiler 0.55
 */

#ifndef BANKMANAGER_H_
#define BANKMANAGER_H_

#include "engine/orb/DistributedObjectBroker.h"

class Player;

class BankManager : public DistributedObjectStub {
protected:
	BankManager();
	BankManager(DistributedObjectServant* obj);
	BankManager(BankManager& ref);

	virtual ~BankManager();

public:
	BankManager* clone();

	bool isBankTerminal(long long objectid);

protected:
	friend class BankManagerHelper;
};

class BankManagerImplementation;

class BankManagerAdapter : public DistributedObjectAdapter {
public:
	BankManagerAdapter(BankManagerImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	bool isBankTerminal(long long objectid);

};

class BankManagerHelper : public DistributedObjectClassHelper, public Singleton<BankManagerHelper> {
public:
	BankManagerHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectServant* obj);

	friend class SingletonWrapper<BankManagerHelper>;
};

class BankManagerServant : public DistributedObjectServant {
public:
	BankManager* _this;

public:
	BankManagerServant();
	virtual ~BankManagerServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*BANKMANAGER_H_*/
