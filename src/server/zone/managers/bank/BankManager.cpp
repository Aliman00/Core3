/*
 *	server/zone/managers/bank/BankManager.cpp generated by engine3 IDL compiler 0.55
 */

#include "BankManager.h"

#include "BankManagerImplementation.h"

/*
 *	BankManagerStub
 */

BankManager::BankManager() {
	_impl = new BankManagerImplementation();
	_impl->_setStub(this);
}

BankManager::BankManager(DummyConstructorParameter* param) {
	_impl = NULL;
}

BankManager::~BankManager() {
}

/*
 *	BankManagerAdapter
 */

BankManagerAdapter::BankManagerAdapter(BankManagerImplementation* obj) : DistributedObjectAdapter((DistributedObjectServant*) obj) {
}

Packet* BankManagerAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	BankManagerHelper
 */

BankManagerHelper* BankManagerHelper::staticInitializer = BankManagerHelper::instance();

BankManagerHelper::BankManagerHelper() {
	className = "BankManager";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void BankManagerHelper::finalizeHelper() {
	BankManagerHelper::finalize();
}

DistributedObject* BankManagerHelper::instantiateObject() {
	return new BankManager(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* BankManagerHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new BankManagerAdapter((BankManagerImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

/*
 *	BankManagerServant
 */

BankManagerServant::BankManagerServant() {
	_classHelper = BankManagerHelper::instance();
}

BankManagerServant::~BankManagerServant() {
}

void BankManagerServant::_setStub(DistributedObjectStub* stub) {
	_this = (BankManager*) stub;
}

DistributedObjectStub* BankManagerServant::_getStub() {
	return _this;
}

