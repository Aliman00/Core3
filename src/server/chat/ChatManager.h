/*
 *	server/chat/ChatManager.h generated by engine3 IDL compiler 0.55
 */

#ifndef CHATMANAGER_H_
#define CHATMANAGER_H_

#include "engine/orb/DistributedObjectBroker.h"

#include "engine/service/Message.h"

#include "../zone/packets/object/StfParameter.h"

class ChatRoom;

class ZoneServer;

class ChatManager : public DistributedObjectStub {
public:
	ChatManager(ZoneServer* server);

	void lock(bool dolock = true);

	void unlock(bool dolock = true);

protected:
	ChatManager(DummyConstructorParameter* param);

	virtual ~ChatManager();

	friend class ChatManagerHelper;
};

class ChatManagerImplementation;

class ChatManagerAdapter : public DistributedObjectAdapter {
public:
	ChatManagerAdapter(ChatManagerImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void lock(bool dolock);

	void unlock(bool dolock);

};

class ChatManagerHelper : public DistributedObjectClassHelper, public Singleton<ChatManagerHelper> {
	static ChatManagerHelper* staticInitializer;

public:
	ChatManagerHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<ChatManagerHelper>;
};

class ChatManagerServant : public DistributedObjectServant {
public:
	ChatManager* _this;

public:
	ChatManagerServant();
	virtual ~ChatManagerServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*CHATMANAGER_H_*/
